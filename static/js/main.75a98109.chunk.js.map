{"version":3,"sources":["images/program.jpg","images/pay2.jpg","components/Header.js","components/Home.js","components/HomeTeacher.js","components/Admin.js","components/SignIn.js","components/Landing.js","components/Temes.js","components/HowToPay.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","state","loged","username","onlogOut","bind","this","setState","updateLoged","window","location","href","localStorage","removeItem","menuUser","links","usergroup","Nav","Link","onClick","Navbar","collapseOnSelect","expand","bg","variant","console","log","Brand","Toggle","aria-controls","Collapse","id","className","Component","Home","loaded","userGroup","userSchool","userInfo","temesOpen","debt","allTemsPased","minTemesGroup","maxTemeGroup","dbinfo","schoolRef","firebase","ref","child","user","JSON","parse","getItem","minTem","maxTem","on","snap","val","setTimeout","map","item","school","groups","name","group","pupils","temes_open","temesPass","temes_pass","push","maxTemesGroup","align","key","HomeTeacher","schoolsInfo","pupilsNum","addTeme","delTeme","allPupilsNum","length","e","schoolId","groupId","x","target","value","i","j","link","update","ListGroup","horizontal","Item","Accordion","defaultActiveKey","Card","as","eventKey","Body","type","phone","Admin","schools","passCheck","password","debtSum","addTemes","delTemes","addSum","addPay","onSubmit","changePassword","admininfo","rootRef","adminRef","adminPassword","et","newtemes","Number","parseInt","pupil","preventDefault","newschool","newgroup","Form","Group","controlId","Label","Control","placeholder","onChange","Button","breakpoint","style","visibility","SignIn","signOut","login","groupSeleced","schoolChuse","status","statusSelect","groupSelect","schoolSelect","onPhoneChange","onPasswordChange","allSchools","allGroups","teacherRef","setItem","stringify","hash","updateData","groupChuse","loginAndPass","faillogin","Alert","Landing","src","program","alt","Temes","temes","temesRef","pop","tema","task","materials","video","HowToPay","pay","width","App","userschool","basename","path","render","exact","component","Boolean","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","userphone","userdebt","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75a98109.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/program.09ba2146.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pay2.41b90458.jpg\";","import React, {Component} from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loged: this.props.loged,\r\n            username: this.props.username\r\n        }\r\n\r\n        this.onlogOut = this.onlogOut.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.username !== null){\r\n            this.setState({loged: true})\r\n        }\r\n    }\r\n    onlogOut(){\r\n        this.props.updateLoged(false)\r\n        window.location.href = '#/Landing';\r\n        localStorage.removeItem('studyLinkuser');\r\n    }\r\n    render() {\r\n        let menuUser, links;\r\n        if(this.props.loged && this.props.usergroup !== null){\r\n            menuUser = (\r\n                <Nav>\r\n                    <Nav.Link>Увійдено як {this.props.username}</Nav.Link>\r\n                    <Nav.Link onClick={this.onlogOut}>Вийти</Nav.Link>\r\n                </Nav>\r\n                )\r\n            links = (\r\n                <Nav>        \r\n                    <Nav.Link href=\"#/home\">Головна</Nav.Link>\r\n                    <Nav.Link href=\"#/temes\">Навчання</Nav.Link>\r\n                    <Nav.Link href=\"#/howtopay\">Як оплатити?</Nav.Link>\r\n                </Nav>\r\n            )\r\n            \r\n        }\r\n        if(this.props.loged && this.props.usergroup === null){\r\n            menuUser = (\r\n                <Nav>\r\n                    <Nav.Link>Увійдено як {this.props.username}</Nav.Link>\r\n                    <Nav.Link onClick={this.onlogOut}>Вийти</Nav.Link>\r\n                </Nav>\r\n                )\r\n            links = (\r\n                <Nav>        \r\n                    <Nav.Link href=\"#/homeTeacher\">Мої групи</Nav.Link>\r\n                    <Nav.Link href=\"#/temes\">Навчання</Nav.Link>\r\n                </Nav>\r\n            )\r\n        }\r\n        if(!this.props.loged){\r\n            menuUser = (\r\n                <Nav>\r\n                    <Nav.Link href=\"#/SignIn\">Увійти</Nav.Link>\r\n                </Nav>\r\n            )\r\n        }\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                {console.log(this.props)}\r\n            <Navbar.Brand href=\"#/landing\">StudyLink</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        {links}\r\n                    </Nav>\r\n                    {menuUser}    \r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport * as firebase from 'firebase';\r\nimport '../componentsStyle/LoaderStyle.css';\r\nimport '../componentsStyle/HomeStyle.css';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            userGroup: '',\r\n            userSchool: '',\r\n            username: 'користувач',\r\n            userInfo: [],\r\n            temesOpen: null,\r\n            debt: null,\r\n            allTemsPased: [],\r\n            minTemesGroup: null,\r\n            maxTemeGroup: null\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        let dbinfo, minTem = 30, maxTem = 0;\r\n        let allTemsPased = [];\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val()\r\n            this.setState({\r\n                userInfo: dbinfo\r\n            })\r\n            setTimeout(()=>{this.state.userInfo.map(item => {\r\n                if(item.school === user.school){\r\n                    item.groups.map(item => {\r\n                        if(item.name === user.group){\r\n                            item.pupils.map(item => {\r\n                                if(item.name === user.name){\r\n                                    this.setState({\r\n                                        debt: item.debt\r\n                                    })\r\n                                }\r\n                            })\r\n                            //інфа про кількість тем відкритих і відвіданих занять\r\n                            this.setState({\r\n                                username: user.name,\r\n                                temesOpen:  item.temes_open,\r\n                                temesPass:  item.temes_pass,\r\n                                allTemsPased: allTemsPased\r\n                            })\r\n                            \r\n                        }\r\n                        allTemsPased.push(item);\r\n                        allTemsPased.map(item=>{\r\n                            if(item.temes_pass < minTem){\r\n                                minTem = item.temes_pass\r\n                            }\r\n                            if(item.temes_pass > maxTem){\r\n                                maxTem = item.temes_pass\r\n                            }\r\n                        })\r\n                        this.setState({ \r\n                            userGroup: user.group,\r\n                            userSchool: user.school, \r\n                            minTemesGroup: minTem,\r\n                            maxTemesGroup: maxTem,\r\n                            loaded: true\r\n                         })\r\n                    })\r\n                    \r\n                }\r\n            })}, 2000)\r\n            \r\n        })\r\n        \r\n    }\r\n    render(){\r\n        /*let debtInfo;\r\n        if(this.state.debt !== ''){\r\n            debtInfo = <h2>Увага у вас є ззаборгованість <b className='red'>{this.state.debt}грн</b></h2>\r\n        }\r\n        if(this.state.debt === ''){\r\n            debtInfo = <div></div>\r\n        }*/\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h2 className='headerInfoUser'>Інформація про користувача</h2>\r\n                    <div className='userInfo'>\r\n                        <h2>Вітаю {this.state.username}!</h2>\r\n                        <h3>Ви проходите курс HTML/CSS у групі {this.state.userGroup}.</h3>\r\n                            <h3>\r\n                                {(this.state.userGroup[6] === 's') ? <span>Неділя </span>: <span>Субота </span>}\r\n                                {(this.state.userGroup[5] === '1') ? <span> 10:00</span>: ''}\r\n                                {(this.state.userGroup[5] === '2') ? <span> 12:00</span>: ''}\r\n                                {(this.state.userGroup[5] === '3') ? <span> 14:00</span>: ''}\r\n                                {(this.state.userGroup[5] === '4') ? <span> 16:00</span>: ''}\r\n                            </h3>\r\n                        <h3>Відбулось {this.state.temesPass} занять</h3>\r\n                    </div>\r\n\r\n                    <h2 className='headerInfoGroups'>Інформація про групи у закладі {this.state.userSchool}</h2>\r\n                    <div align='center' className='allGroups'>\r\n                        { this.state.allTemsPased.map(item=>(\r\n                            <div key={item.name} className='groups'>\r\n                                У групі {item.name} відбулось: {item.temes_pass} занять.\r\n                            </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    {(this.state.temesPass > this.state.minTemesGroup) ? (\r\n                    <div>\r\n                        <h2 className='headerInfoGroups'>Пропустили заняття?</h2>\r\n                        <div className='userInfo'>\r\n                            <h4>Відвідати пропущене заняття №{this.state.temesPass} можна у іншій групі вашого закладу</h4>\r\n                            <h5 className='red'><span >Увага!!! </span>Пропускати заняття без важливої не можна. \r\n                            Кількість мість у групах обмежена. Про бажання прийти на пропущене \r\n                            заняття до іншої групи потрібно попередити вчителя.</h5>\r\n                            <h4>Групи з якими можна буде відвідати пропущене заняття №{this.state.temesPass}:</h4>\r\n                            \r\n                            { this.state.allTemsPased.map(item=>(\r\n                                <div key={item.name}>\r\n                                    {(item.temes_pass < this.state.temesPass) ?\r\n                                        <div>\r\n                                            {(item.name[6] === 's') ? <h4>Неділя</h4>: <h4>Субота</h4>}\r\n                                            <h5>\r\n                                                Група {item.name} [&nbsp; час - \r\n                                                {(item.name[5] === '1') ? <span> 10:00</span>: ''}\r\n                                                {(item.name[5] === '2') ? <span> 12:00</span>: ''}\r\n                                                {(item.name[5] === '3') ? <span> 14:00</span>: ''}\r\n                                                {(item.name[5] === '4') ? <span> 16:00</span>: ''}\r\n                                                &nbsp;]\r\n                                            </h5>\r\n                                        </div> : <div></div>}\r\n                                </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        {/*<h3>Оплачено {Math.ceil(this.state.temesPass/4)*4} занять</h3>\r\n                        <h3>Наступна оплата через {Math.ceil(this.state.temesPass/4)*4 - this.state.temesPass} заняття</h3>\r\n                        {debtInfo}*/}\r\n                    </div>) : <div></div>}\r\n                </div>\r\n            )\r\n        } \r\n    }\r\n}\r\nexport default Home;","import React, {Component} from \"react\";\r\nimport * as firebase from 'firebase';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport '../componentsStyle/LoaderStyle.css';\r\nimport '../componentsStyle/HomeStyle.css';\r\n\r\nclass HomeTeacher extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            user: null,\r\n            groups: [],\r\n            schoolsInfo: [],\r\n            pupilsNum: 0,\r\n            school: null\r\n        }\r\n        this.addTeme = this.addTeme.bind(this)\r\n        this.delTeme = this.delTeme.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        let schoolsInfo, allPupilsNum = 0;\r\n        schoolRef.on('value', snap =>{\r\n            schoolsInfo = snap.val()\r\n            //console.log(schoolsInfo)\r\n            this.setState({\r\n                schoolsInfo: schoolsInfo,\r\n                user: user\r\n            })\r\n            this.state.schoolsInfo.map(item=>{\r\n                if(item.school === user.school){\r\n                    item.groups.map(item=>{\r\n                        allPupilsNum += item.pupils.length\r\n                    })\r\n                    this.setState({\r\n                        groups: item.groups,\r\n                        pupilsNum: allPupilsNum\r\n                    })\r\n                    allPupilsNum = 0;\r\n                }\r\n            })\r\n        })\r\n        setTimeout(()=>{\r\n            this.setState({\r\n            user: user,\r\n            loaded: true\r\n        })\r\n        }, 1500)\r\n    }\r\n    addTeme(e){\r\n        let x = e.target.value;\r\n        //console.log('add teme',this.state.user.school, x);\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo, i = 0, j = 0, schoolId, groupId, temesPass;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            this.setState({\r\n                school: dbinfo\r\n            })\r\n        })\r\n        setTimeout(()=>{\r\n            dbinfo.map(item=>{\r\n                console.log(item)\r\n                if(item.school === this.state.user.school){\r\n                    schoolId = i;\r\n                    item.groups.map(item=>{\r\n                        if(item.name === x){\r\n                            groupId = j;\r\n                            temesPass = item.temes_pass + 1;\r\n                            let link = 'schools/'+schoolId+'/groups/'+groupId;\r\n                            console.log(link)\r\n                            firebase.database().ref(link).update({\r\n                                temes_pass: temesPass\r\n                            })\r\n                        }\r\n                        j++\r\n                    })\r\n                }\r\n                i++\r\n            })}, 300)\r\n    }\r\n    delTeme(e){\r\n        let x = e.target.value;\r\n        //console.log('add teme',this.state.user.school, x);\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo, i = 0, j = 0, schoolId, groupId, temesPass;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            this.setState({\r\n                school: dbinfo\r\n            })\r\n        })\r\n        setTimeout(()=>{\r\n            dbinfo.map(item=>{\r\n                console.log(item)\r\n                if(item.school === this.state.user.school){\r\n                    schoolId = i;\r\n                    item.groups.map(item=>{\r\n                        if(item.name === x){\r\n                            groupId = j;\r\n                            temesPass = item.temes_pass - 1;\r\n                            let link = 'schools/'+schoolId+'/groups/'+groupId;\r\n                            console.log(link)\r\n                            firebase.database().ref(link).update({\r\n                                temes_pass: temesPass\r\n                            })\r\n                        }\r\n                        j++\r\n                    })\r\n                }\r\n                i++\r\n            })}, 300)\r\n    }\r\n    render(){\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h1>Hello teacher {this.state.user.name}! Учнів у закладі - {this.state.pupilsNum}</h1>\r\n                    <h2>Пройдені теми по групам</h2>\r\n                    <ListGroup horizontal >\r\n                        <ListGroup.Item className='width-250'><b>Назва групи</b></ListGroup.Item>\r\n                        <ListGroup.Item className='width-250'><b>Кількість учнів</b></ListGroup.Item>\r\n                        <ListGroup.Item className='width-250'><b>Пройдено тем</b></ListGroup.Item>\r\n                        <ListGroup.Item className='width-250'><b>Змінити кількість тем</b></ListGroup.Item> \r\n                    </ListGroup>\r\n                    {this.state.groups.map(item=>(\r\n                        <ListGroup horizontal key={item.name}>\r\n                            <ListGroup.Item className='width-250'>{item.name}</ListGroup.Item>\r\n                            <ListGroup.Item className='width-250'>{item.pupils.length}</ListGroup.Item>\r\n                            <ListGroup.Item className='width-250'>{item.temes_pass}</ListGroup.Item>\r\n                            <ListGroup.Item className='width-250'>\r\n                                <button value={item.name} onClick={this.addTeme}>+</button>\r\n                                <button value={item.name} onClick={this.delTeme}>-</button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    ))\r\n                    }\r\n                    <h2>Оцінки</h2>\r\n                    <Accordion defaultActiveKey=\"0\" align='left'>\r\n                    {this.state.groups.map(item=>(\r\n                    \r\n                            <Card key={item.name}>\r\n                                <Accordion.Toggle as={Card.Header} eventKey={item.name}>\r\n                                    {item.name}\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey={item.name}>\r\n                                <Card.Body>\r\n                                <ListGroup horizontal >\r\n                                    <ListGroup.Item className='width-250'><b>Ім'я Прізвище</b></ListGroup.Item>\r\n                                    <ListGroup.Item className='width-150'><b>Заняття №</b></ListGroup.Item>\r\n                                </ListGroup>\r\n                                {item.pupils.map(item=>(\r\n                                    <ListGroup horizontal key={item.name}>\r\n                                    <ListGroup.Item className='width-250'>{item.name}</ListGroup.Item>\r\n                                    <ListGroup.Item className='width-150'>\r\n                                        <input type='text' className='width-50' />\r\n                                        <button value={item.name}>+</button>\r\n                                        <button value={item.name}>-</button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                                ))\r\n                                }\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                    ))\r\n                    } \r\n                    </Accordion>\r\n                    \r\n                    <h2>Внести оплату</h2>\r\n\r\n                    <Accordion defaultActiveKey=\"0\" align='left'>\r\n                    {this.state.groups.map(item=>(\r\n                    \r\n                            <Card key={item.name}>\r\n                                <Accordion.Toggle as={Card.Header} eventKey={item.name}>\r\n                                    {item.name}\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey={item.name}>\r\n                                <Card.Body>\r\n                                <ListGroup horizontal >\r\n                                    <ListGroup.Item className='width-250'><b>Ім'я Прізвище</b></ListGroup.Item>\r\n                                    <ListGroup.Item className='width-250'><b>Номер телефону</b></ListGroup.Item>\r\n                                    <ListGroup.Item className='width-150'><b>Борг</b></ListGroup.Item>\r\n                                    <ListGroup.Item className='width-200'><b>Оплата</b></ListGroup.Item>\r\n                                </ListGroup>\r\n                                {item.pupils.map(item=>(\r\n                                    <ListGroup horizontal key={item.name}>\r\n                                    <ListGroup.Item className='width-250'>{item.name}</ListGroup.Item>\r\n                                    <ListGroup.Item className='width-250'>{item.phone}</ListGroup.Item>\r\n                                    <ListGroup.Item className='width-150'>{item.debt === '' ? <b>Оплачено</b> : item.debt}</ListGroup.Item>\r\n                                    <ListGroup.Item className='width-200'>\r\n                                        <input type='text' className='width-50' />\r\n                                        <button value={item.name}>Додати</button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                                ))\r\n                                }\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                    ))\r\n                    } \r\n                    </Accordion>\r\n                </div>\r\n            )\r\n        } \r\n    }\r\n}\r\nexport default HomeTeacher;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport  '../componentsStyle/AdminStyle.css';\r\nimport '../componentsStyle/LoaderStyle.css';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nclass Admin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            schools: null,\r\n            passCheck: false,\r\n            password: null,\r\n            debtSum: ''\r\n        }\r\n\r\n        this.addTemes = this.addTemes.bind(this)\r\n        this.delTemes = this.delTemes.bind(this)\r\n        this.addSum = this.addSum.bind(this)\r\n        this.addPay = this.addPay.bind(this)     \r\n        this.onSubmit = this.onSubmit.bind(this) \r\n        this.changePassword = this.changePassword.bind(this) \r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        const adminRef = rootRef.child('admin');\r\n        let dbinfo, admininfo;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            this.setState({\r\n                schools: dbinfo,\r\n                loaded: true\r\n            })\r\n        })\r\n        adminRef.on('value', snap =>{\r\n            admininfo = snap.val();\r\n            //console.log(admininfo)\r\n            this.setState({\r\n                adminPassword: admininfo.password\r\n            })\r\n        })\r\n        \r\n    }\r\n    addTemes(e){\r\n        //console.log('add teme',e.target.value)\r\n        let et = e.target.value;\r\n        let school = et[0];\r\n        let group = et[1];\r\n        let newtemes = 0;\r\n        if(et.length === 3){\r\n            newtemes = Number.parseInt(et[2]) + 1;\r\n        }\r\n        if(et.length === 4){\r\n            newtemes = Number.parseInt(et[2]+et[3]) + 1;\r\n        }\r\n        let link = 'schools/'+school+'/groups/'+group;\r\n        //console.log(link)\r\n        firebase.database().ref(link).update({\r\n            temes_pass: newtemes\r\n        })\r\n    }\r\n    delTemes(e){\r\n        let et = e.target.value;\r\n        let school = et[0];\r\n        let group = et[1];\r\n        let newtemes = 0;\r\n        if(et.length === 3){\r\n            newtemes = Number.parseInt(et[2]) - 1;\r\n        }\r\n        if(et.length === 4){\r\n            newtemes = Number.parseInt(et[2]+et[3]) - 1;\r\n        }\r\n        let link = 'schools/'+school+'/groups/'+group;\r\n        //console.log(link)\r\n        firebase.database().ref(link).update({\r\n            temes_pass: newtemes\r\n        })\r\n    }\r\n    addPay(e){\r\n        //console.log(e.target.value)\r\n        let et = e.target.value;\r\n        let school = et[0];\r\n        let group = et[1];\r\n        let pupil;\r\n        if(et.length === 3){\r\n            pupil = Number.parseInt(et[2]) - 2;\r\n        }\r\n        if(et.length === 4){\r\n            pupil = Number.parseInt(et[2]+et[3]) - 2;\r\n        }\r\n        let link = 'schools/'+school+'/groups/'+group+'/pupils/'+pupil;\r\n        firebase.database().ref(link).update({\r\n            debt: this.state.debtSum\r\n        })\r\n        this.setState({\r\n            debtSum: ''\r\n        })\r\n        //console.log(school, group, pupil, 'DATA')\r\n    }\r\n    addSum(e){\r\n        this.setState({\r\n            debtSum: e.target.value\r\n        })\r\n        //console.log(this.state.debtSum)\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if(this.state.adminPassword === this.state.password){\r\n            this.setState({\r\n                passCheck: true\r\n            })\r\n        }\r\n    }\r\n    changePassword(e) {\r\n        //console.log(e.target.value)\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        let i = 1, newschool = 0, newgroup = 0;\r\n        if(!this.state.loaded && this.state.passCheck===false){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        if(this.state.loaded && this.state.passCheck===false){\r\n            return (\r\n                <Form onSubmit={this.onSubmit} className='w-50'>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Введіть пароль адміна</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.changePassword}/>\r\n                    </Form.Group>\r\n                   \r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Увійти\r\n                    </Button>\r\n                </Form>\r\n              )\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h1 className='ff-c'>Усі школи і гупи</h1>\r\n                    \r\n                    {\r\n                    this.state.schools.map(item =>(\r\n                    <div key={item.school}>\r\n                        <h1 className='blue ff-c'>{item.school}</h1>\r\n                        <div>\r\n                            {item.groups.map(item =>(\r\n                                <div key={item.name}>\r\n                                    <h3 align='left' className='gray ff-c ml-30 mt-20'>\r\n                                        <b>{item.name}</b> \t&nbsp;\t&nbsp;\r\n                                        [{item.temes_pass} - занять\r\n                                        <button value={newschool+''+newgroup+''+item.temes_pass} onClick={this.addTemes}>+</button>\r\n                                        <button value={newschool+''+ newgroup+''+item.temes_pass} onClick={this.delTemes}>-</button>\r\n                                        ] (включно з пробним)\r\n                                    </h3>\r\n                                        <ListGroup horizontal >\r\n                                            <ListGroup.Item className='width-50'><b>№</b></ListGroup.Item>\r\n                                            <ListGroup.Item className='width-250'><b>Ім'я і Прізвище</b></ListGroup.Item>\r\n                                            <ListGroup.Item className='width-250'><b>Номер телефону(пароль)</b></ListGroup.Item>\r\n                                            <ListGroup.Item className='width-150'><b>Борг</b></ListGroup.Item>\r\n                                            <ListGroup.Item className='width-250'><b>Виписати борг</b></ListGroup.Item> \r\n                                        </ListGroup>\r\n                                    {item.pupils.map(breakpoint => (\r\n                                        <ListGroup horizontal key={breakpoint.name}>\r\n                                            <ListGroup.Item className='width-50'>{i++}</ListGroup.Item>\r\n                                            <ListGroup.Item className='width-250'>{breakpoint.name}</ListGroup.Item>\r\n                                            <ListGroup.Item className='width-250'>{breakpoint.password}</ListGroup.Item>\r\n                                            <ListGroup.Item className='width-150'>\r\n                                                {(breakpoint.debt !== '') ? \r\n                                                <span className='red'><b>{breakpoint.debt}</b></span> : \r\n                                                <span className='green'><b>оплaчено</b></span>}\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item className='width-250'>\r\n                                                <input type='text' placeholder='сума боргу' className='width-100' onChange={this.addSum}/>\r\n                                                <button  value={newschool+''+ newgroup+''+i} onClick={this.addPay}>Додати</button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    ))}\r\n                                    <div style={{visibility: 'hidden'}}>{i = 1} {newgroup++}</div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div style={{visibility: 'hidden'}}>{newschool++}{newgroup = newschool - 1}</div>\r\n                    </div>\r\n                    ))\r\n                    }\r\n                    \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Admin;","import React, {Component} from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as firebase from 'firebase';\r\n\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signOut: false,\r\n            login: null,\r\n            phone: '',\r\n            password: '',\r\n            schools: [],\r\n            groups: [],\r\n            group: '',\r\n            school: '',\r\n            groupSeleced: '',\r\n            schoolChuse: false,\r\n            status: null\r\n        }\r\n        this.statusSelect = this.statusSelect.bind(this);\r\n        this.groupSelect = this.groupSelect.bind(this);\r\n        this.schoolSelect = this.schoolSelect.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onPhoneChange = this.onPhoneChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let groups;\r\n        let allSchools=[];\r\n        schoolRef.on('value', snap => {\r\n            groups = snap.val();\r\n            groups.map(item => {\r\n                allSchools.push(item.school)\r\n            })\r\n            this.setState({\r\n                schools: allSchools\r\n            })\r\n        })\r\n    }\r\n    schoolSelect(e){\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo;\r\n        let allGroups=[];\r\n        schoolRef.on('value', snap => {\r\n            dbinfo = snap.val();\r\n            dbinfo.map(item => {\r\n                if(item.school === e.target.value){\r\n                    item.groups.map(item => {\r\n                        allGroups.push(item.name)\r\n                    })\r\n                } \r\n            })\r\n        })\r\n        this.setState({\r\n            school: e.target.value,\r\n            groups: allGroups,\r\n            schoolChuse: true\r\n        })\r\n    }\r\n    groupSelect(e){\r\n        this.setState({\r\n            group: e.target.value\r\n        })\r\n    }\r\n    statusSelect(e){\r\n        this.setState({\r\n            status: e.target.value\r\n        })\r\n    }\r\n    onPhoneChange(e) {\r\n        this.setState({\r\n            phone: e.target.value\r\n        })\r\n    }\r\n    onPasswordChange(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        const teacherRef = rootRef.child('teachers');\r\n        let dbinfo, dbinfoteacher;\r\n        let userInfo={}; \r\n        \r\n        if(this.state.status === 'Учень'){\r\n        schoolRef.on('value', snap => {\r\n            dbinfo = snap.val();\r\n            dbinfo.map(item=>{\r\n                if(item.school === this.state.school){\r\n                    item.groups.map(item=>{\r\n                        if(item.name === this.state.group){\r\n                            item.pupils.map(item=>{\r\n                                if(this.state.phone === item.phone && this.state.password === item.password){\r\n                                    //console.log('loged', item); записуємо учня у локалстор\r\n                                    userInfo.name = item.name;\r\n                                    userInfo.school = this.state.school;\r\n                                    userInfo.group = this.state.group;\r\n                                    userInfo.phone = item.phone;\r\n                                    userInfo.debt = item.debt;\r\n                                    userInfo.password = item.password;\r\n                                    //console.log(userInfo);\r\n                                    localStorage.setItem('studyLinkuser', JSON.stringify(userInfo));\r\n                                    window.location.hash = '#/home';\r\n                                    this.setState({ signOut: true })\r\n                                    //зміна пропсу у основній компоненті для зміни меню в залежності від залогованого учня\r\n                                    this.props.updateData(item.name)\r\n                                }else{\r\n                                    this.setState({ login: false })\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            }\r\n        )}\r\n        if(this.state.status === 'Вчитель'){\r\n            teacherRef.on('value', snap => {\r\n                dbinfoteacher = snap.val();\r\n                dbinfoteacher.map(item=>{\r\n                if(item.school === this.state.school){\r\n                    console.log(item.name)\r\n                    if(item.password === this.state.password){\r\n                        console.log('pass good')\r\n                    \r\n                        userInfo.name = item.name;\r\n                        userInfo.school = this.state.school;\r\n                        userInfo.group = null;\r\n                        userInfo.phone = null;\r\n                        userInfo.debt = null;\r\n                        userInfo.password = null;\r\n                        userInfo.status = 'teacher';\r\n                        console.log(userInfo);\r\n                        localStorage.setItem('studyLinkuser', JSON.stringify(userInfo));\r\n                        window.location.hash = '#/homeTeacher';\r\n                        this.setState({ signOut: true })\r\n                        //зміна пропсу у основній компоненті для зміни меню в залежності від залогованого учня\r\n                        this.props.updateData(item.name)\r\n                    }\r\n                    else{\r\n                        this.setState({ login: false })\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        }\r\n    }\r\n    render() {     \r\n        let school, groupChuse, loginAndPass, faillogin;\r\n        if(this.state.login === false){\r\n            faillogin = <Alert variant='danger'>Невірний логін або пароль</Alert> \r\n            setTimeout( ()=>{\r\n                faillogin = <div></div>\r\n                this.setState({login: null})\r\n            }, 3000);\r\n        }\r\n        if(this.state.login === true){\r\n            faillogin = <div></div>\r\n        }\r\n        if(this.state.schoolChuse && \r\n            this.state.status !== 'Вчитель' && \r\n            this.state.status !== 'Адміністратор' &&\r\n            this.state.status !== 'Call center'\r\n            ){\r\n            groupChuse = (\r\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                    <Form.Label>Назва групи</Form.Label>\r\n                    <Form.Control as=\"select\" onChange={this.groupSelect}>\r\n                        <option>Моя група</option>\r\n                        {   \r\n                            this.state.groups.map(item => \r\n                                <option key={item}>{item}</option>\r\n                            ) \r\n                        }\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            )\r\n        }\r\n        if(\r\n            (this.state.status === 'Вчитель'|| this.state.status === 'Учень')  && \r\n            this.state.school !== '' &&\r\n            this.state.group !== ''\r\n            ){\r\n            loginAndPass = (\r\n                <div>\r\n                    <Form.Group>\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control \r\n                            name=\"name\" \r\n                            type=\"text\" \r\n                            placeholder=\"Enter phone\" \r\n                            onChange={this.onPhoneChange}\r\n                            value={this.state.phone} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={this.onPasswordChange}\r\n                            value={this.state.password} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Увійти\r\n                    </Button>\r\n                </div>\r\n            )\r\n        }\r\n        if(this.state.status === 'Вчитель' && this.state.schoolChuse !== false){\r\n            loginAndPass = (\r\n                <div>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Ваш вчительський пароль</Form.Label>\r\n                        <Form.Control \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={this.onPasswordChange}\r\n                            value={this.state.password} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                            Увійти\r\n                    </Button>\r\n                </div>\r\n            )\r\n        }\r\n        if(this.state.status === 'Адміністратор'){\r\n            loginAndPass = (\r\n                <div>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password for admin</Form.Label>\r\n                        <Form.Control \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={this.onPasswordChange}\r\n                            value={this.state.password} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                    Увійти\r\n                    </Button>\r\n                </div>\r\n            )\r\n        }\r\n        if(this.state.status === 'Call center'){\r\n            loginAndPass = (\r\n                <div>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password fot call center</Form.Label>\r\n                        <Form.Control \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={this.onPasswordChange}\r\n                            value={this.state.password} />\r\n                    </Form.Group>\r\n                \r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                    Увійти\r\n                    </Button>\r\n                </div>\r\n            )\r\n        }\r\n        if(this.state.status === 'Вчитель'|| this.state.status === 'Учень'){\r\n            school = (\r\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                    <Form.Label>Назва закладу</Form.Label>\r\n                    <Form.Control as=\"select\" onChange={this.schoolSelect}>\r\n                            <option>Мій заклад</option>\r\n                        {\r\n                            this.state.schools.map(item => \r\n                                <option key={item}>{item}</option>\r\n                            )\r\n                        }\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            )\r\n        }\r\n        return ( \r\n            <div className=\"container w-50\"> \r\n            <br />\r\n                <Form onSubmit={this.onSubmit}>\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect3\">\r\n                        <Form.Label>Статус</Form.Label>\r\n                        <Form.Control as=\"select\" onChange={this.statusSelect}>\r\n                                <option>Мій статус</option>\r\n                                <option>Учень</option>\r\n                                <option>Вчитель</option>\r\n                                <option>Адміністратор</option>\r\n                                <option>Call center</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    {/*компонент для вибору закладу (школи)*/}\r\n                    {school}\r\n\r\n                    {/*компонент для вибору групи у даному закладі (школі)*/}\r\n                    {groupChuse}\r\n\r\n                    {/*помилка при невірному введеню логіна чи пароля*/}\r\n                    {faillogin}\r\n\r\n                    {/*логін і пароль відносно вибраного статусу*/}\r\n                    {loginAndPass}\r\n                    \r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, {Component} from \"react\";\r\nimport program from '../images/program.jpg';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Landing extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: null\r\n        }\r\n        \r\n    }\r\n    componentDidMount(){\r\n        \r\n    }\r\n    render() {\r\n        return ( \r\n           <div>\r\n               <img src={program} alt='program'/>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport '../componentsStyle/LoaderStyle.css';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nclass Temes extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            temes: null,\r\n            username: null,\r\n            temesOpen: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const temesRef = rootRef.child('temes');\r\n        const schoolRef = rootRef.child('schools');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        //console.log(user)\r\n        let dbinfo, dbinfoSchools, temes_pass;\r\n        \r\n        schoolRef.on('value', snap =>{\r\n            dbinfoSchools = snap.val();\r\n            dbinfoSchools.map(item=>{\r\n                if(item.school === user.school){\r\n                    item.groups.map(item=>{\r\n                        if(item.name === user.group){\r\n                            temes_pass = item.temes_pass\r\n                            this.setState({\r\n                                temesOpen: item.temes_pass\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        temesRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            if(!this.state.loaded){\r\n                while(dbinfo.length > temes_pass){\r\n                    dbinfo.pop();\r\n                    //console.log(dbinfo, temes_pass)\r\n                }\r\n                this.setState({\r\n                    temes: dbinfo\r\n                })\r\n            }\r\n            this.setState({\r\n                username: user.name,\r\n                loaded: true\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <h1>Теми відкриті для {this.state.username}</h1>\r\n                    <Accordion defaultActiveKey=\"0\" align='left'>\r\n                    {\r\n                        this.state.temes.map(item=>(\r\n                            <Card key={item.tema}>\r\n                                <Accordion.Toggle as={Card.Header} eventKey={item.tema}>\r\n                                    {item.tema}\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey={item.tema}>\r\n                                <Card.Body>\r\n                                    {(item.task[0] !== \"\") ? <div>\r\n                                        <h5 align=\"left\">Завдання</h5>\r\n                                        <ol>\r\n                                        {item.task.map(item =>(\r\n                                            <li align='left' key={item}><a href={'https://kosaniakmarianone.github.io/' + item} target='blank'>Завдання</a></li>\r\n                                        ))}\r\n                                        </ol></div>: ''\r\n                                    }\r\n                                    {(item.materials !== \"\") ? <h5 align='left'><a href={item.materials} target='blank'>Матеріали</a></h5> : ''}\r\n                                    {(item.video !== \"\") ? <h5 align='left'><a href={item.video} target='blank'>Відео</a></h5> : ''}\r\n                                    {(item.video === \"\" && item.materials === \"\" && item.task[0] === \"\") ? 'Тема не відкрита, або розглядається лише на занятті': ''}\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        ))\r\n                    }\r\n                     </Accordion>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Temes;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport pay from '../images/pay2.jpg';\r\n\r\n\r\nclass HowToPay extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loged: false\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            loaded: true\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        else{\r\n        return (\r\n            <div>\r\n                <h5>ЄДРПОУ 3580013618</h5>\r\n\r\n                <h5>У зв'язку з переведенням рахунків на IBAN формат, клієнтам всіх банків\r\n                    , крім ПриватБанк незручно оплачувати навчання\r\n                    . Підбивши підсумки,ми вирішили спростити систему оплати і рекомендуємо наступне.\r\n                </h5>\r\n                \r\n                <h4>Для власників карти приватбанку є зручний спосіб оплати. Оплачувати навчання можна за допомогою QR коду.</h4>\r\n                \r\n                <h4><img src={pay} alt='how to pay' width='60%'/></h4>\r\n                    \r\n                <h4>Клієнтам інших банків оплачувати на сайті за <a href='https://next.privat24.ua/payments/dashboard/' target='blank'> посиланням</a>\r\n                    . В формі пишите наданий вище код ЄДРПОУ, тисните пошук, вибираєте Руссу В.С\r\n                    ., ФОП, інше (курси,...).\r\n                    Заповнюєте форму і відправляєте платіж.\r\n                </h4>\r\n               \r\n                <h5>Комісія 1 грн,в незалежності від банку</h5>\r\n               \r\n            </div>\r\n        );\r\n        }\r\n    }\r\n}\r\nexport default HowToPay;","import React, {Component} from 'react';\nimport { HashRouter, Route} from \"react-router-dom\";\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport HomeTeacher from './components/HomeTeacher';\nimport Admin from './components/Admin';\nimport SignIn from './components/SignIn';\nimport Landing from './components/Landing';\nimport Temes from './components/Temes';\nimport HowToPay from './components/HowToPay';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: this.props.username,\n            loged: false\n        }\n        this.updateData = this.updateData.bind(this)\n        this.updateLoged = this.updateLoged.bind(this)\n\n    }\n    componentDidMount(){\n        if(this.props.username !== null){\n        this.setState({ \n            loged: true,\n            username: this.props.username,\n            userschool: this.props.userschool,\n            usergroup: this.props.usergroup,\n         })\n        }\n    }\n    updateData = (value) => {\n        this.setState({ username: value, loged: true});\n    }\n    updateLoged = (value) => {\n        this.setState({ loged: value});\n    }\n    render() {\n        return (\n            <HashRouter basename='/'>\n              <div className=\"App\" align='center'>\n                  <Route path='/'  render={() => (<Header\n                    username={this.state.username} \n                    loged={this.state.loged} \n                    updateLoged={this.updateLoged}\n                    usergroup={this.props.usergroup}/>)\n                  }/>\n\n                  <Route exact path='/' component={Landing}/>\n\n                  <Route exact path='/landing' component={Landing}/>\n\n                  <Route exact path='/home' component={Home}/>\n\n                  <Route exact path='/homeTeacher' component={HomeTeacher}/>\n\n                  <Route exact path='/temes' component={Temes}/>\n\n                  <Route exact path='/howtopay' component={HowToPay}/>\n\n                  <Route exact path='/admin' component={Admin}/>\n\n                  <Route path='/SignIn' render={() => (<SignIn updateData={this.updateData}/>)}/>\n              </div>\n          </HashRouter>\n        );\n    }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDHAQfudekbBrh4WeEyhi9XZ4tPyuU-nHQ\",\n    authDomain: \"studylink-62a6b.firebaseapp.com\",\n    databaseURL: \"https://studylink-62a6b.firebaseio.com\",\n    projectId: \"studylink-62a6b\",\n    storageBucket: \"studylink-62a6b.appspot.com\",\n    messagingSenderId: \"710063505158\",\n    appId: \"1:710063505158:web:4573c8d89733fc2025e887\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  let user;\n  if(localStorage.getItem('studyLinkuser') !== null){\n    user = JSON.parse(localStorage.getItem('studyLinkuser'));\n  }\n  if(localStorage.getItem('studyLinkuser') == null){\n    user = {\n      name: null,\n      school: null,\n      group: null,\n      phone: null,\n      debt: null\n  }\n}\nReactDOM.render(<App \n  username={user.name}\n  userschool={user.school} \n  usergroup={user.group} \n  userphone={user.phone} \n  userdebt={user.debt}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}