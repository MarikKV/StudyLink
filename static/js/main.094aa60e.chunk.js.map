{"version":3,"sources":["components/Header.js","components/Home.js","components/HomeTeacher.js","components/TeacherGroups.js","components/Admin.js","components/SignIn.js","components/Landing.js","components/Temes.js","components/HowToPay.js","components/Stream.js","components/Online.js","App.js","serviceWorker.js","index.js","images/program.jpg","images/pay.jpg"],"names":["Header","props","state","loged","username","onlogOut","bind","this","setState","updateLoged","window","location","href","localStorage","removeItem","menuUser","links","usergroup","Nav","Link","onClick","className","Navbar","collapseOnSelect","expand","bg","variant","console","log","Brand","Toggle","aria-controls","Collapse","id","Component","Home","loaded","userGroup","userSchool","userInfo","temesOpen","debt","allTemsPased","minTemesGroup","maxTemeGroup","dbinfo","schoolRef","firebase","ref","child","user","JSON","parse","getItem","minTem","maxTem","on","snap","val","setTimeout","map","item","school","groups","name","group","pupils","temes_open","temesPass","temes_pass","push","maxTemesGroup","align","key","HomeTeacher","schoolsInfo","pupilsNum","addTeme","delTeme","allPupilsNum","length","e","schoolId","groupId","x","target","value","i","j","link","update","ListGroup","horizontal","Item","Accordion","defaultActiveKey","Card","as","eventKey","Body","type","phone","TeacherGroups","newStudentName","newStudentPassword","reload","addStudent","delStudent","password","confirm","remove","pupil","inex","stringify","placeholder","onChange","Admin","schools","passCheck","debtSum","newSchoolName","newGroupeName","newDay","addTemes","delTemes","addSum","addPay","onSubmit","changePassword","newSchool","addNewSchool","newGroupe","addNewGroupe","admininfo","temesInfo","rootRef","adminRef","temesRef","adminPassword","temes","et","newtemes","Number","parseInt","preventDefault","canBeAdded","schoolIndex","newGName","day","currentDay","dayf","days","dayss","newschool","newgroup","Form","Group","controlId","Label","Control","Button","Tabs","Tab","title","breakpoint","style","visibility","index","tema","SignIn","signOut","login","groupSeleced","schoolChuse","status","statusSelect","groupSelect","schoolSelect","onPhoneChange","onPasswordChange","allSchools","allGroups","teacherRef","setItem","hash","updateData","groupChuse","loginAndPass","faillogin","Alert","Landing","animation","duration","src","program","alt","width","Temes","pop","task","materials","video","HowToPay","pay","Stream","streamUrl","stream","streamRef","height","frameborder","allow","allowfullscreen","Online","online","onlineHref","onlineRef","App","userschool","basename","path","render","exact","component","Boolean","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","userphone","userdebt","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.094aa60e.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../componentsStyle/Header.css';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loged: this.props.loged,\r\n            username: this.props.username\r\n        }\r\n\r\n        this.onlogOut = this.onlogOut.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.username !== null){\r\n            this.setState({loged: true})\r\n        }\r\n    }\r\n    onlogOut(){\r\n        this.props.updateLoged(false)\r\n        window.location.href = '#/Landing';\r\n        localStorage.removeItem('studyLinkuser');\r\n    }\r\n    render() {\r\n        let menuUser, links;\r\n        if(this.props.loged && this.props.usergroup !== null){\r\n            menuUser = (\r\n                <Nav>\r\n                    <Nav.Link>Увійдено як {this.props.username}</Nav.Link>\r\n                    <Nav.Link onClick={this.onlogOut}>Вийти</Nav.Link>\r\n                </Nav>\r\n                )\r\n            links = (\r\n                <Nav>        \r\n                    <Nav.Link href=\"#/home\">Головна</Nav.Link>\r\n                    <Nav.Link href=\"#/temes\">Навчання</Nav.Link>\r\n                    <Nav.Link href=\"#/online\">Онлайн навчання</Nav.Link>\r\n                    <Nav.Link href=\"#/stream\">Стрім(повторення)</Nav.Link>\r\n                    <Nav.Link href=\"#/howtopay\">Як оплатити?</Nav.Link>\r\n                </Nav>\r\n            )\r\n            \r\n        }\r\n        if(this.props.loged && this.props.usergroup === null){\r\n            menuUser = (\r\n                <Nav>\r\n                    <Nav.Link>Увійдено як {this.props.username}</Nav.Link>\r\n                    <Nav.Link onClick={this.onlogOut}>Вийти</Nav.Link>\r\n                </Nav>\r\n                )\r\n            links = (\r\n                <Nav>        \r\n                    <Nav.Link href=\"#/homeTeacher\">Мої групи</Nav.Link>\r\n                    <Nav.Link href=\"#/TeacherGroups\">Додати/Видалити учня</Nav.Link>\r\n                    <Nav.Link href=\"#/temes\">Навчання</Nav.Link>\r\n                    <Nav.Link href=\"#/stream\"><span className='animation1'>Стрім(повторення)</span></Nav.Link>\r\n                </Nav>\r\n            )\r\n        }\r\n        if(!this.props.loged){\r\n            menuUser = (\r\n                <Nav>\r\n                    <Nav.Link href=\"#/SignIn\">Увійти</Nav.Link>\r\n                </Nav>\r\n            )\r\n        }\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                {console.log(this.props)}\r\n            <Navbar.Brand href=\"#/landing\">StudyLink</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        {links}\r\n                    </Nav>\r\n                    {menuUser}    \r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport * as firebase from 'firebase';\r\nimport '../componentsStyle/LoaderStyle.css';\r\nimport '../componentsStyle/HomeStyle.css';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            userGroup: '',\r\n            userSchool: '',\r\n            username: 'користувач',\r\n            userInfo: [],\r\n            temesOpen: null,\r\n            debt: null,\r\n            allTemsPased: [],\r\n            minTemesGroup: null,\r\n            maxTemeGroup: null\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        let dbinfo, minTem = 30, maxTem = 0;\r\n        let allTemsPased = [];\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val()\r\n            this.setState({\r\n                userInfo: dbinfo\r\n            })\r\n            setTimeout(()=>{this.state.userInfo.map(item => {\r\n                if(item.school === user.school){\r\n                    item.groups.map(item => {\r\n                        if(item.name === user.group){\r\n                            item.pupils.map(item => {\r\n                                if(item.name === user.name){\r\n                                    this.setState({\r\n                                        debt: item.debt\r\n                                    })\r\n                                }\r\n                            })\r\n                            //інфа про кількість тем відкритих і відвіданих занять\r\n                            this.setState({\r\n                                username: user.name,\r\n                                temesOpen:  item.temes_open,\r\n                                temesPass:  item.temes_pass,\r\n                                allTemsPased: allTemsPased\r\n                            })\r\n                            \r\n                        }\r\n                        allTemsPased.push(item);\r\n                        allTemsPased.map(item=>{\r\n                            if(item.temes_pass < minTem){\r\n                                minTem = item.temes_pass\r\n                            }\r\n                            if(item.temes_pass > maxTem){\r\n                                maxTem = item.temes_pass\r\n                            }\r\n                        })\r\n                        this.setState({ \r\n                            userGroup: user.group,\r\n                            userSchool: user.school, \r\n                            minTemesGroup: minTem,\r\n                            maxTemesGroup: maxTem,\r\n                            loaded: true\r\n                         })\r\n                    })\r\n                    \r\n                }\r\n            })}, 2000)\r\n            \r\n        })\r\n        \r\n    }\r\n    render(){\r\n        /*let debtInfo;\r\n        if(this.state.debt !== ''){\r\n            debtInfo = <h2>Увага у вас є ззаборгованість <b className='red'>{this.state.debt}грн</b></h2>\r\n        }\r\n        if(this.state.debt === ''){\r\n            debtInfo = <div></div>\r\n        }*/\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h2 className='headerInfoUser'>Інформація про користувача</h2>\r\n                    <div className='userInfo'>\r\n                        <h2>Вітаю {this.state.username}!</h2>\r\n                        <h3>Ви проходите курс HTML/CSS у групі {this.state.userGroup}.</h3>\r\n                            <h3>\r\n                                {(this.state.userGroup[6] === 's') ? <span>Неділя </span>: ''}\r\n                                {(this.state.userGroup[6] === 'f') ? <span>П'ятниця </span>: ''}\r\n                                {(this.state.userGroup[6] === null) ? <span>Субота </span>: ''}\r\n                                {(this.state.userGroup[5] === '1' && this.state.userGroup[6] !== 'f') ? <span> 10:00</span>: ''}\r\n                                {(this.state.userGroup[5] === '2' && this.state.userGroup[6] !== 'f') ? <span> 12:00</span>: ''}\r\n                                {(this.state.userGroup[5] === '3' && this.state.userGroup[6] !== 'f') ? <span> 14:00</span>: ''}\r\n                                {(this.state.userGroup[5] === '4' && this.state.userGroup[6] !== 'f') ? <span> 16:00</span>: ''}\r\n\r\n                                {(this.state.userGroup[5] === '1' && this.state.userGroup[6] === 'f') ? <span> 16:30</span>: ''}\r\n                                {(this.state.userGroup[5] === '2' && this.state.userGroup[6] === 'f') ? <span> 18:30</span>: ''}\r\n                            </h3>\r\n                        <h3>Відбулось {this.state.temesPass} занять</h3>\r\n                    </div>\r\n\r\n                    <h2 className='headerInfoGroups'>Інформація про групи у закладі {this.state.userSchool}</h2>\r\n                    <div align='center' className='allGroups'>\r\n                        { this.state.allTemsPased.map(item=>(\r\n                            <div key={item.name} className='groups'>\r\n                                У групі {item.name} відбулось: {item.temes_pass} занять.\r\n                            </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    {(this.state.temesPass > this.state.minTemesGroup) ? (\r\n                    <div>\r\n                        <h2 className='headerInfoGroups'>Пропустили заняття?</h2>\r\n                        <div className='userInfo'>\r\n                            <h4>Відвідати пропущене заняття №{this.state.temesPass} можна у іншій групі вашого закладу</h4>\r\n                            <h5 className='red'><span >Увага!!! </span>Пропускати заняття без важливої не можна. \r\n                            Кількість мість у групах обмежена. Про бажання прийти на пропущене \r\n                            заняття до іншої групи потрібно попередити вчителя.</h5>\r\n                            <h4>Групи з якими можна буде відвідати пропущене заняття №{this.state.temesPass}:</h4>\r\n                            \r\n                            { this.state.allTemsPased.map(item=>(\r\n                                <div key={item.name}>\r\n                                    {(item.temes_pass < this.state.temesPass) ?\r\n                                        <div>\r\n                                            {(item.name[6] === 's') ? <h4>Неділя</h4>: <h4>Субота</h4>}\r\n                                            <h5>\r\n                                                Група {item.name} [&nbsp; час - \r\n                                                {(item.name[5] === '1') ? <span> 10:00</span>: ''}\r\n                                                {(item.name[5] === '2') ? <span> 12:00</span>: ''}\r\n                                                {(item.name[5] === '3') ? <span> 14:00</span>: ''}\r\n                                                {(item.name[5] === '4') ? <span> 16:00</span>: ''}\r\n                                                &nbsp;]\r\n                                            </h5>\r\n                                        </div> : <div></div>}\r\n                                </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        {/*<h3>Оплачено {Math.ceil(this.state.temesPass/4)*4} занять</h3>\r\n                        <h3>Наступна оплата через {Math.ceil(this.state.temesPass/4)*4 - this.state.temesPass} заняття</h3>\r\n                        {debtInfo}*/}\r\n                    </div>) : <div></div>}\r\n                </div>\r\n            )\r\n        } \r\n    }\r\n}\r\nexport default Home;","import React, {Component} from \"react\";\r\nimport * as firebase from 'firebase';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport '../componentsStyle/LoaderStyle.css';\r\nimport '../componentsStyle/HomeStyle.css';\r\n\r\nclass HomeTeacher extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            user: null,\r\n            groups: [],\r\n            schoolsInfo: [],\r\n            pupilsNum: 0,\r\n            school: null\r\n        }\r\n        this.addTeme = this.addTeme.bind(this)\r\n        this.delTeme = this.delTeme.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        let schoolsInfo, allPupilsNum = 0;\r\n        schoolRef.on('value', snap =>{\r\n            schoolsInfo = snap.val()\r\n            //console.log(schoolsInfo)\r\n            this.setState({\r\n                schoolsInfo: schoolsInfo,\r\n                user: user\r\n            })\r\n            this.state.schoolsInfo.map(item=>{\r\n                if(item.school === user.school){\r\n                    item.groups.map(item=>{\r\n                        allPupilsNum += item.pupils.length\r\n                    })\r\n                    this.setState({\r\n                        groups: item.groups,\r\n                        pupilsNum: allPupilsNum\r\n                    })\r\n                    allPupilsNum = 0;\r\n                }\r\n            })\r\n        })\r\n        setTimeout(()=>{\r\n            this.setState({\r\n            user: user,\r\n            loaded: true\r\n        })\r\n        }, 1500)\r\n    }\r\n    addTeme(e){\r\n        let x = e.target.value;\r\n        //console.log('add teme',this.state.user.school, x);\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo, i = 0, j = 0, schoolId, groupId, temesPass;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            this.setState({\r\n                school: dbinfo\r\n            })\r\n        })\r\n        setTimeout(()=>{\r\n            dbinfo.map(item=>{\r\n                console.log(item)\r\n                if(item.school === this.state.user.school){\r\n                    schoolId = i;\r\n                    item.groups.map(item=>{\r\n                        if(item.name === x){\r\n                            groupId = j;\r\n                            temesPass = item.temes_pass + 1;\r\n                            let link = 'schools/'+schoolId+'/groups/'+groupId;\r\n                            console.log(link)\r\n                            firebase.database().ref(link).update({\r\n                                temes_pass: temesPass\r\n                            })\r\n                        }\r\n                        j++\r\n                    })\r\n                }\r\n                i++\r\n            })}, 300)\r\n    }\r\n    delTeme(e){\r\n        let x = e.target.value;\r\n        //console.log('add teme',this.state.user.school, x);\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo, i = 0, j = 0, schoolId, groupId, temesPass;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            this.setState({\r\n                school: dbinfo\r\n            })\r\n        })\r\n        setTimeout(()=>{\r\n            dbinfo.map(item=>{\r\n                console.log(item)\r\n                if(item.school === this.state.user.school){\r\n                    schoolId = i;\r\n                    item.groups.map(item=>{\r\n                        if(item.name === x){\r\n                            groupId = j;\r\n                            temesPass = item.temes_pass - 1;\r\n                            let link = 'schools/'+schoolId+'/groups/'+groupId;\r\n                            console.log(link)\r\n                            firebase.database().ref(link).update({\r\n                                temes_pass: temesPass\r\n                            })\r\n                        }\r\n                        j++\r\n                    })\r\n                }\r\n                i++\r\n            })}, 300)\r\n    }\r\n    render(){\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h1>Hello teacher {this.state.user.name}! Учнів у закладі - {this.state.pupilsNum}</h1>\r\n                    <h2>Пройдені теми по групам</h2>\r\n                    <div className='center'>\r\n                    <ListGroup horizontal >\r\n                        <ListGroup.Item className='width-250'><b>Назва групи</b></ListGroup.Item>\r\n                        <ListGroup.Item className='width-250'><b>Кількість учнів</b></ListGroup.Item>\r\n                        <ListGroup.Item className='width-250'><b>Пройдено тем</b></ListGroup.Item>\r\n                        <ListGroup.Item className='width-250'><b>Змінити кількість тем</b></ListGroup.Item> \r\n                    </ListGroup>\r\n                    {this.state.groups.map(item=>(\r\n                        <ListGroup horizontal key={item.name}>\r\n                            <ListGroup.Item className='width-250'>{item.name}</ListGroup.Item>\r\n                            <ListGroup.Item className='width-250'>{item.pupils.length}</ListGroup.Item>\r\n                            <ListGroup.Item className='width-250'>{item.temes_pass}</ListGroup.Item>\r\n                            <ListGroup.Item className='width-250'>\r\n                                <button value={item.name} onClick={this.addTeme}>+</button>\r\n                                <button value={item.name} onClick={this.delTeme}>-</button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    ))\r\n                    }\r\n                    </div>\r\n                    <br/><br/><br/>\r\n                    <h2>У планах</h2>\r\n                    <h2>Оцінки</h2>\r\n                    <Accordion defaultActiveKey=\"0\" align='left'>\r\n                    {this.state.groups.map(item=>(\r\n                    \r\n                            <Card key={item.name}>\r\n                                <Accordion.Toggle as={Card.Header} eventKey={item.name}>\r\n                                    {item.name}\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey={item.name}>\r\n                                <Card.Body>\r\n                                <ListGroup horizontal >\r\n                                    <ListGroup.Item className='width-250'><b>Ім'я Прізвище</b></ListGroup.Item>\r\n                                    <ListGroup.Item className='width-150'><b>Заняття №</b></ListGroup.Item>\r\n                                </ListGroup>\r\n                                {item.pupils.map(item=>(\r\n                                    <ListGroup horizontal key={item.name}>\r\n                                    <ListGroup.Item className='width-250'>{item.name}</ListGroup.Item>\r\n                                    <ListGroup.Item className='width-150'>\r\n                                        <input type='text' className='width-50' />\r\n                                        <button value={item.name}>+</button>\r\n                                        <button value={item.name}>-</button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                                ))\r\n                                }\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                    ))\r\n                    } \r\n                    </Accordion>\r\n                    \r\n                    <h2>Внести заборгованість</h2>\r\n\r\n                    <Accordion defaultActiveKey=\"0\" align='left'>\r\n                    {this.state.groups.map(item=>(\r\n                    \r\n                            <Card key={item.name}>\r\n                                <Accordion.Toggle as={Card.Header} eventKey={item.name}>\r\n                                    {item.name}\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey={item.name}>\r\n                                <Card.Body>\r\n                                <ListGroup horizontal >\r\n                                    <ListGroup.Item className='width-250'><b>Ім'я Прізвище</b></ListGroup.Item>\r\n                                    <ListGroup.Item className='width-250'><b>Номер телефону</b></ListGroup.Item>\r\n                                    <ListGroup.Item className='width-150'><b>Борг</b></ListGroup.Item>\r\n                                    <ListGroup.Item className='width-200'><b>Оплата</b></ListGroup.Item>\r\n                                </ListGroup>\r\n                                {item.pupils.map(item=>(\r\n                                    <ListGroup horizontal key={item.name}>\r\n                                    <ListGroup.Item className='width-250'>{item.name}</ListGroup.Item>\r\n                                    <ListGroup.Item className='width-250'>{item.phone}</ListGroup.Item>\r\n                                    <ListGroup.Item className='width-150'>{item.debt === '' ? <b>Оплачено</b> : item.debt}</ListGroup.Item>\r\n                                    <ListGroup.Item className='width-200'>\r\n                                        <input type='text' className='width-50' />\r\n                                        <button value={item.name}>Додати</button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                                ))\r\n                                }\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                    ))\r\n                    } \r\n                    </Accordion>\r\n                </div>\r\n            )\r\n        } \r\n    }\r\n}\r\nexport default HomeTeacher;","import React, {Component} from \"react\";\r\nimport * as firebase from 'firebase';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport '../componentsStyle/LoaderStyle.css';\r\nimport '../componentsStyle/HomeStyle.css';\r\n\r\nclass TeacherGroups extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            user: null,\r\n            groups: [],\r\n            schoolsInfo: [],\r\n            pupilsNum: 0,\r\n            school: null,\r\n            newStudentName: '',\r\n            newStudentPassword: '',\r\n            reload: false\r\n        }\r\n        this.addTeme = this.addTeme.bind(this)\r\n        this.delTeme = this.delTeme.bind(this)\r\n        this.addStudent = this.addStudent.bind(this)\r\n        this.newStudentName = this.newStudentName.bind(this)\r\n        this.newStudentPassword = this.newStudentPassword.bind(this)\r\n        this.delStudent = this.delStudent.bind(this)\r\n\r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        let schoolsInfo, allPupilsNum = 0;\r\n        schoolRef.on('value', snap =>{\r\n            schoolsInfo = snap.val()\r\n            //console.log(schoolsInfo)\r\n            this.setState({\r\n                schoolsInfo: schoolsInfo,\r\n                user: user\r\n            })\r\n            this.state.schoolsInfo.map(item=>{\r\n                if(item.school === user.school){\r\n                    item.groups.map(item=>{\r\n                        allPupilsNum += item.pupils.length\r\n                    })\r\n                    this.setState({\r\n                        groups: item.groups,\r\n                        pupilsNum: allPupilsNum\r\n                    })\r\n                    allPupilsNum = 0;\r\n                }\r\n            })\r\n        })\r\n        setTimeout(()=>{\r\n            this.setState({\r\n            user: user,\r\n            loaded: true\r\n        })\r\n        }, 1500)\r\n    }\r\n    addTeme(e){\r\n        let x = e.target.value;\r\n        //console.log('add teme',this.state.user.school, x);\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo, i = 0, j = 0, schoolId, groupId, temesPass;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            this.setState({\r\n                school: dbinfo\r\n            })\r\n        })\r\n        setTimeout(()=>{\r\n            dbinfo.map(item=>{\r\n                console.log(item)\r\n                if(item.school === this.state.user.school){\r\n                    schoolId = i;\r\n                    item.groups.map(item=>{\r\n                        if(item.name === x){\r\n                            groupId = j;\r\n                            temesPass = item.temes_pass + 1;\r\n                            let link = 'schools/'+schoolId+'/groups/'+groupId;\r\n                            console.log(link)\r\n                            firebase.database().ref(link).update({\r\n                                temes_pass: temesPass\r\n                            })\r\n                        }\r\n                        j++\r\n                    })\r\n                }\r\n                i++\r\n            })}, 300)\r\n    }\r\n    delTeme(e){\r\n        let x = e.target.value;\r\n        //console.log('add teme',this.state.user.school, x);\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo, i = 0, j = 0, schoolId, groupId, temesPass;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            this.setState({\r\n                school: dbinfo\r\n            })\r\n        })\r\n        setTimeout(()=>{\r\n            dbinfo.map(item=>{\r\n                console.log(item)\r\n                if(item.school === this.state.user.school){\r\n                    schoolId = i;\r\n                    item.groups.map(item=>{\r\n                        if(item.name === x){\r\n                            groupId = j;\r\n                            temesPass = item.temes_pass - 1;\r\n                            let link = 'schools/'+schoolId+'/groups/'+groupId;\r\n                            console.log(link)\r\n                            firebase.database().ref(link).update({\r\n                                temes_pass: temesPass\r\n                            })\r\n                        }\r\n                        j++\r\n                    })\r\n                }\r\n                i++\r\n            })}, 300)\r\n    }\r\n    newStudentName(e){\r\n        this.setState({\r\n            newStudentName: e.target.value\r\n        })\r\n    }\r\n    newStudentPassword(e){\r\n        this.setState({\r\n            newStudentPassword: e.target.value\r\n        })\r\n    }\r\n    addStudent(e){\r\n        let group = e.target.value;\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo, i = 0, j = 0, schoolId, groupId;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            this.setState({\r\n                school: dbinfo\r\n            })\r\n        })\r\n        \r\n        setTimeout(()=>{\r\n            dbinfo.map(item=>{\r\n                console.log(item)\r\n                if(item.school === this.state.user.school){\r\n                    schoolId = i;\r\n                    item.groups.map(item=>{\r\n                        if(item.name === group){\r\n                            groupId = j;\r\n                            let link = 'schools/'+schoolId+'/groups/'+groupId+'/pupils/'+item.pupils.length;\r\n                            console.log( link, 'school - ', i, 'group - ',j)\r\n                            firebase.database().ref(link).update({\r\n                                debt: \"\",\r\n                                name: this.state.newStudentName,\r\n                                password: this.state.newStudentPassword,\r\n                                phone: this.state.newStudentPassword\r\n                            })\r\n                        }\r\n                        j++\r\n                    })\r\n                }\r\n                i++\r\n            })}, 300)\r\n    }\r\n    delStudent(e){\r\n        let user = JSON.parse(e.target.value);\r\n\r\n        if(window.confirm(\"Delete user \" + user.name + \"?\")){\r\n            const rootRef = firebase.database().ref();\r\n            const schoolRef = rootRef.child('schools');\r\n            let dbinfo, i = 0, j = 0, schoolId, groupId;\r\n            schoolRef.on('value', snap =>{\r\n                dbinfo = snap.val();\r\n                this.setState({\r\n                    schoolsInfo: dbinfo\r\n                })\r\n            })\r\n            \r\n            \r\n            dbinfo.map(item=>{\r\n                if(item.school === this.state.user.school){\r\n                    schoolId = i;\r\n                    item.groups.map(item=>{\r\n                        if(item.name === user.group){\r\n                            groupId = j;\r\n                        }\r\n                        j++\r\n                    })\r\n                }\r\n                i++\r\n            })\r\n\r\n            let link = 'schools/'+schoolId+'/groups/'+groupId+'/pupils/'+user.i;\r\n           \r\n            firebase.database().ref(link).remove();\r\n            console.log('link', link, 'removed user');\r\n           \r\n            setTimeout(()=>{\r\n                let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n                let schoolsInfo, allPupilsNum = 0;\r\n                schoolRef.on('value', snap =>{\r\n                    schoolsInfo = snap.val()\r\n                    //console.log(schoolsInfo)\r\n                    this.setState({\r\n                        schoolsInfo: schoolsInfo,\r\n                        user: user\r\n                    })\r\n                    this.state.schoolsInfo.map(item=>{\r\n                        if(item.school === user.school){\r\n                            item.groups.map(item=>{\r\n                                allPupilsNum += item.pupils.length\r\n                            })\r\n                            this.setState({\r\n                                groups: item.groups,\r\n                                pupilsNum: allPupilsNum\r\n                            })\r\n                            allPupilsNum = 0;\r\n                        }\r\n                    })\r\n                })\r\n            }, 1000)\r\n\r\n        }else{\r\n            console.log(\"user not deleted\")\r\n        }\r\n        \r\n    }\r\n    render(){\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h1>Редагування груп вчителя - {this.state.user.name} у закладі - {this.state.user.school}</h1>\r\n                    <h2>Пройдені теми по групам</h2>\r\n                    <ListGroup horizontal >\r\n                        <ListGroup.Item className='width-250'><b>Назва групи</b></ListGroup.Item>\r\n                        <ListGroup.Item className='width-250'><b>Кількість учнів</b></ListGroup.Item>\r\n                        <ListGroup.Item className='width-250'><b>Пройдено тем</b></ListGroup.Item>\r\n                        <ListGroup.Item className='width-250'><b>Змінити кількість тем</b></ListGroup.Item> \r\n                    </ListGroup>\r\n                    {this.state.groups.map(item=>(\r\n                        <ListGroup horizontal key={item.name}>\r\n                            <ListGroup.Item className='width-250'>{item.name}</ListGroup.Item>\r\n                            <ListGroup.Item className='width-250'>{item.pupils.length}</ListGroup.Item>\r\n                            <ListGroup.Item className='width-250'>{item.temes_pass}</ListGroup.Item>\r\n                            <ListGroup.Item className='width-250'>\r\n                                <button value={item.name} onClick={this.addTeme}>+</button>\r\n                                <button value={item.name} onClick={this.delTeme}>-</button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    ))\r\n                    }\r\n                    <h2>Добавити учня у групу</h2>\r\n                    <Accordion defaultActiveKey=\"0\" align='left'>\r\n                    {this.state.groups.map(item=>(\r\n                            <Card key={item.name}>\r\n                                <Accordion.Toggle as={Card.Header} eventKey={item.name}>\r\n                                    {item.name}\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey={item.name}>\r\n                                <Card.Body>\r\n                                <ListGroup horizontal >\r\n                                    <ListGroup.Item className='width-250'><b>Ім'я Прізвище</b></ListGroup.Item>\r\n                                    <ListGroup.Item className='width-250'><b>Номер телефону</b></ListGroup.Item>\r\n                                </ListGroup>\r\n                                {item.pupils.map((pupil, inex)=>( \r\n                                <ListGroup horizontal key={pupil.name}>\r\n                                    <ListGroup.Item className='width-250'>{pupil.name}</ListGroup.Item>\r\n                                    <ListGroup.Item className='width-250'>\r\n                                        {pupil.phone}\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item className='width-150'>\r\n                                        <button value={JSON.stringify({name: pupil.name, group: item.name, i: inex})} onClick={this.delStudent}>Видалити учня</button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                                ))\r\n                                }\r\n                                <ListGroup horizontal>\r\n                                    <ListGroup.Item className='width-250'>\r\n                                        <input type=\"text\" placeholder=\"Ім'я і прізвище\" onChange={this.newStudentName}/>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item className='width-250'>\r\n                                        <input type=\"text\" placeholder=\"Телефон(пароль)\" onChange={this.newStudentPassword}/>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                                <br />\r\n                                <button value={item.name} onClick={this.addStudent}>Додати учня</button>\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                    ))\r\n                    } \r\n                    </Accordion>\r\n                </div>\r\n            )\r\n        } \r\n    }\r\n}\r\nexport default TeacherGroups;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs'; \r\nimport  '../componentsStyle/AdminStyle.css';\r\nimport '../componentsStyle/LoaderStyle.css';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nclass Admin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            schools: null,\r\n            passCheck: false,\r\n            password: null,\r\n            debtSum: '',\r\n            newSchoolName: null,\r\n            newGroupeName: \"Надія\",\r\n            newDay: \"П'ятниця\"\r\n        }\r\n\r\n        this.addTemes = this.addTemes.bind(this)\r\n        this.delTemes = this.delTemes.bind(this)\r\n        this.addSum = this.addSum.bind(this)\r\n        this.addPay = this.addPay.bind(this)     \r\n        this.onSubmit = this.onSubmit.bind(this) \r\n        this.changePassword = this.changePassword.bind(this) \r\n        \r\n        this.newSchool = this.newSchool.bind(this) \r\n        this.addNewSchool = this.addNewSchool.bind(this) \r\n        \r\n        this.newGroupe = this.newGroupe.bind(this) \r\n        this.addNewGroupe = this.addNewGroupe.bind(this) \r\n\r\n        this.newDay = this.newDay.bind(this) \r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        const adminRef = rootRef.child('admin');\r\n        const temesRef = rootRef.child('temes');\r\n        let dbinfo, admininfo, temesInfo;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            this.setState({\r\n                schools: dbinfo,\r\n                loaded: true\r\n            })\r\n        })\r\n        adminRef.on('value', snap =>{\r\n            admininfo = snap.val();\r\n            //console.log(admininfo)\r\n            this.setState({\r\n                adminPassword: admininfo.password\r\n            })\r\n        })\r\n        temesRef.on('value', snap =>{\r\n            temesInfo = snap.val();\r\n            //console.log(admininfo)\r\n            this.setState({\r\n                temes: temesInfo\r\n            })\r\n        })\r\n        \r\n    }\r\n    addTemes(e){\r\n        //console.log('add teme',e.target.value)\r\n        let et = e.target.value;\r\n        let school = et[0];\r\n        let group = et[1];\r\n        let newtemes = 0;\r\n        if(et.length === 3){\r\n            newtemes = Number.parseInt(et[2]) + 1;\r\n        }\r\n        if(et.length === 4){\r\n            newtemes = Number.parseInt(et[2]+et[3]) + 1;\r\n        }\r\n        let link = 'schools/'+school+'/groups/'+group;\r\n        //console.log(link)\r\n        firebase.database().ref(link).update({\r\n            temes_pass: newtemes\r\n        })\r\n    }\r\n    delTemes(e){\r\n        let et = e.target.value;\r\n        let school = et[0];\r\n        let group = et[1];\r\n        let newtemes = 0;\r\n        if(et.length === 3){\r\n            newtemes = Number.parseInt(et[2]) - 1;\r\n        }\r\n        if(et.length === 4){\r\n            newtemes = Number.parseInt(et[2]+et[3]) - 1;\r\n        }\r\n        let link = 'schools/'+school+'/groups/'+group;\r\n        //console.log(link)\r\n        firebase.database().ref(link).update({\r\n            temes_pass: newtemes\r\n        })\r\n    }\r\n    addPay(e){\r\n        //console.log(e.target.value)\r\n        let et = e.target.value;\r\n        let school = et[0];\r\n        let group = et[1];\r\n        let pupil;\r\n        if(et.length === 3){\r\n            pupil = Number.parseInt(et[2]) - 2;\r\n        }\r\n        if(et.length === 4){\r\n            pupil = Number.parseInt(et[2]+et[3]) - 2;\r\n        }\r\n        let link = 'schools/'+school+'/groups/'+group+'/pupils/'+pupil;\r\n        firebase.database().ref(link).update({\r\n            debt: this.state.debtSum\r\n        })\r\n        this.setState({\r\n            debtSum: ''\r\n        })\r\n        //console.log(school, group, pupil, 'DATA')\r\n    }\r\n    addSum(e){\r\n        this.setState({\r\n            debtSum: e.target.value\r\n        })\r\n        //console.log(this.state.debtSum)\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if(this.state.adminPassword === this.state.password){\r\n            this.setState({\r\n                passCheck: true\r\n            })\r\n        }\r\n    }\r\n    changePassword(e) {\r\n        //console.log(e.target.value)\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n    newSchool(e){\r\n        this.setState({\r\n            newSchoolName: e.target.value\r\n        })\r\n    }\r\n    addNewSchool(){\r\n        let newSchoolId = 1;\r\n        let canBeAdded = true;\r\n        let link = 'schools/'+newSchoolId;\r\n        console.log(link, this.state.newSchoolName);\r\n        for(let i=0; i<this.state.schools.length; i++){\r\n            if(this.state.schools[i].school === this.state.newSchoolName){\r\n                canBeAdded = false\r\n            }\r\n        }\r\n        if(this.state.newSchoolName !== '' && canBeAdded){\r\n        firebase.database().ref(link).update({\r\n            groups:{'0':{\r\n                        name:'newSchool', \r\n                        pupils:{'0':{\r\n                            debt:'',\r\n                            name: 'test', \r\n                            password: 'test', \r\n                            phone:'test'\r\n                        }\r\n                        },\r\n                        temes_open: 1, \r\n                        temes_pass: 1\r\n                    }\r\n                },\r\n            school: this.state.newSchoolName,\r\n        })}\r\n    }\r\n    newGroupe(e){\r\n        this.setState({\r\n            newGroupeName: e.target.value\r\n        })\r\n        console.log(this.state.newGroupeName)\r\n    }\r\n    addNewGroupe(){\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo, schoolIndex, newGName, day, dayf=0, days=0, dayss=0, currentDay;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            this.setState({\r\n                schools: dbinfo\r\n            })\r\n        })\r\n        for(let i = 0; i < this.state.schools.length; i++){\r\n            if(this.state.schools[i].school === this.state.newGroupeName){\r\n                schoolIndex = i;\r\n            }\r\n        }\r\n        \r\n        for(let j = 0; j < this.state.schools[schoolIndex].groups.length; j++){\r\n            if(this.state.schools[schoolIndex].groups[j].name.length === 6){\r\n                dayss++\r\n            }\r\n            if(this.state.schools[schoolIndex].groups[j].name.length === 7 &&\r\n                this.state.schools[schoolIndex].groups[j].name[6] === 'f'\r\n                ){\r\n                dayf++\r\n            }\r\n            if(this.state.schools[schoolIndex].groups[j].name.length === 7 &&\r\n                this.state.schools[schoolIndex].groups[j].name[6] === 's'\r\n                ){\r\n                days++\r\n            }\r\n            if(this.state.newDay === \"П'ятниця\"){\r\n                day = 'f';\r\n                currentDay=dayf\r\n            }\r\n            if(this.state.newDay === \"Субота\"){\r\n                day = '';\r\n                currentDay=dayss\r\n            }\r\n            if(this.state.newDay === \"Неділя\"){\r\n                day = 's';\r\n                currentDay=days\r\n            }\r\n        }\r\n        newGName = 'SL-10'+(currentDay+1)+day;\r\n        let link = 'schools/'+schoolIndex+'/groups/'+(currentDay);\r\n        console.log(link)\r\n        firebase.database().ref(link).update({\r\n            name: newGName, \r\n            pupils:{'0':{\r\n                debt:'',\r\n                name: 'test', \r\n                password: 'test', \r\n                phone:'test'\r\n            }\r\n            },\r\n            temes_open: 1, \r\n            temes_pass: 1\r\n        })\r\n    }\r\n    newDay(e){\r\n        this.setState({\r\n            newDay: e.target.value\r\n        })\r\n        console.log(this.state.newDay)\r\n    }\r\n    \r\n    render() {\r\n        let i = 1, newschool = 0, newgroup = 0;\r\n        if(!this.state.loaded && this.state.passCheck===false){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        if(this.state.loaded && this.state.passCheck===false){\r\n            return (\r\n                <Form onSubmit={this.onSubmit} className=\"w-50\">\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label >Введіть пароль адміна</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.changePassword}/>\r\n                    </Form.Group>\r\n                   \r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Увійти\r\n                    </Button>\r\n                </Form>\r\n              )\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h1 className='ff-c'>Усі школи і гупи</h1>\r\n                    <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n                        <Tab eventKey=\"home\" title=\"Групи\">\r\n\r\n                        {\r\n                        this.state.schools.map(item =>(\r\n                        <div key={item.school}>\r\n                            <h1 className='blue ff-c'>{item.school}</h1>\r\n                            <div>\r\n                                {item.groups.map(item =>(\r\n                                    <div key={item.name}>\r\n                                        <h3 align='left' className='gray ff-c ml-30 mt-20'>\r\n                                            <b>{item.name}</b> \t&nbsp;\t&nbsp;\r\n                                            [{item.temes_pass} - занять\r\n                                            <button value={newschool+''+newgroup+''+item.temes_pass} onClick={this.addTemes}>+</button>\r\n                                            <button value={newschool+''+ newgroup+''+item.temes_pass} onClick={this.delTemes}>-</button>\r\n                                            ] (включно з пробним)\r\n                                        </h3>\r\n                                            <ListGroup horizontal >\r\n                                                <ListGroup.Item className='width-50'><b>№</b></ListGroup.Item>\r\n                                                <ListGroup.Item className='width-250'><b>Ім'я і Прізвище</b></ListGroup.Item>\r\n                                                <ListGroup.Item className='width-250'><b>Номер телефону(пароль)</b></ListGroup.Item>\r\n                                                <ListGroup.Item className='width-150'><b>Борг</b></ListGroup.Item>\r\n                                                <ListGroup.Item className='width-250'><b>Виписати борг</b></ListGroup.Item> \r\n                                            </ListGroup>\r\n                                        {item.pupils.map(breakpoint => (\r\n                                            <ListGroup horizontal key={breakpoint.name}>\r\n                                                <ListGroup.Item className='width-50'>{i++}</ListGroup.Item>\r\n                                                <ListGroup.Item className='width-250'>{breakpoint.name}</ListGroup.Item>\r\n                                                <ListGroup.Item className='width-250'>{breakpoint.password}</ListGroup.Item>\r\n                                                <ListGroup.Item className='width-150'>\r\n                                                    {(breakpoint.debt !== '') ? \r\n                                                    <span className='red'><b>{breakpoint.debt}</b></span> : \r\n                                                    <span className='green'><b>оплaчено</b></span>}\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup.Item className='width-250'>\r\n                                                    <input type='text' placeholder='сума боргу' className='width-100' onChange={this.addSum}/>\r\n                                                    <button  value={newschool+''+ newgroup+''+i} onClick={this.addPay}>Додати</button>\r\n                                                </ListGroup.Item>\r\n                                            </ListGroup>\r\n                                        ))}\r\n                                        <div style={{visibility: 'hidden'}}>{i = 1} {newgroup++}</div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div style={{visibility: 'hidden'}}>{newschool++}{newgroup = newschool - 1}</div>\r\n                        </div>\r\n                        ))\r\n                        }\r\n\r\n                        </Tab>\r\n                        <Tab eventKey=\"temes\" title=\"Теми\">\r\n                            <h1>Теми курсу HTML/CSS</h1>\r\n                            <ListGroup horizontal >\r\n                                <ListGroup.Item className='width-50'><b>№</b></ListGroup.Item>\r\n                                <ListGroup.Item className='width-250'><b>Тема</b></ListGroup.Item>\r\n                                <ListGroup.Item className='width-250'><b>Редагувати</b></ListGroup.Item>\r\n                            </ListGroup>\r\n                            {this.state.temes.map((breakpoint, index) => (\r\n                                <ListGroup horizontal key={index}>\r\n                                    <ListGroup.Item className='width-50'>{index+1}</ListGroup.Item>\r\n                                    <ListGroup.Item className='width-250'>{breakpoint.tema}</ListGroup.Item>\r\n                                    <ListGroup.Item className='width-250'><button><b>Редагувати</b></button></ListGroup.Item>\r\n                                </ListGroup>\r\n                            ))}\r\n                            {/*\r\n                            <label><b>Нaзва теми</b></label><br/>\r\n                            <input type=\"text\" value=\"\"/><br/><br/>\r\n\r\n                            <label><b>Посилання на Ютуб</b></label><br/>\r\n                            <input type=\"text\" value=\"\"/><br/><br/>\r\n\r\n                            <label><b>Посилання на Диск</b></label><br/>\r\n                            <input type=\"text\" value=\"\"/><br/><br/>\r\n\r\n                            <label><b>Посилання на github(зроблене завдання)</b></label><br/>\r\n                            <input type=\"text\" value=\"\"/><br/><br/>\r\n\r\n                            <button><b>Додати нову тему</b></button>\r\n                            */}\r\n                        </Tab>\r\n                        <Tab eventKey=\"newschool\" title=\"Додати новий заклад/групу\">\r\n                            <br/>\r\n                            <h5 className=\"header-back\">Адмін може додати новий заклад і групи у ньому, а також пароль для викладача якй вестиме заняття<br/>\r\n                                    Назви груп будуть додаватись автоматично.<br/>\r\n                                    Вчитель зможе добавляти учнів зі свого акаунту.\r\n                            </h5>\r\n\r\n                            <div className=\"w-60 fl\">\r\n                                <h5>Інформація/редагування існуючих закладів</h5>\r\n\r\n                                <ListGroup horizontal key='one'>\r\n                                    <ListGroup.Item><b>Назва закладу</b></ListGroup.Item>\r\n                                    <ListGroup.Item><b>Кількість груп субота</b></ListGroup.Item>\r\n                                    <ListGroup.Item><b>Кількість груп неділя</b></ListGroup.Item>\r\n                                    <ListGroup.Item><b>Додати групу субота</b></ListGroup.Item>\r\n                                    <ListGroup.Item><b>Додати групу на неділя</b></ListGroup.Item>\r\n                                </ListGroup>\r\n                            </div>\r\n                            <div className=\"w-40 fl\">\r\n                                <h5>Додати новий заклад</h5>\r\n                                \r\n                                <label><b>Нaзва нового закладу</b></label><br/>\r\n                                <input type=\"text\" onChange={this.newSchool}/>\r\n                                <button onClick={this.addNewSchool}>Додати</button>\r\n                                <br/><br/>\r\n\r\n                                <h5>Додати нову групу у заклад</h5>\r\n\r\n                                <label><b>День занять</b></label><br/>\r\n                                <select onChange={this.newGroupe}>\r\n                                    {this.state.schools.map((schools, index)=>(\r\n                                            <option key={index}>{schools.school}</option>\r\n                                        ))\r\n                                    }\r\n                                </select>\r\n                                <select onChange={this.newDay}>\r\n                                    <option>П'ятниця</option>\r\n                                    <option>Субота</option>\r\n                                    <option>Неділя</option>\r\n                                </select>\r\n                                <button onClick={this.addNewGroupe}><b>Додати</b></button>\r\n                            </div>\r\n                        </Tab>\r\n                    </Tabs>\r\n                    \r\n                    \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Admin;","import React, {Component} from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as firebase from 'firebase';\r\n\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signOut: false,\r\n            login: null,\r\n            phone: '',\r\n            password: '',\r\n            schools: [],\r\n            groups: [],\r\n            group: '',\r\n            school: '',\r\n            groupSeleced: '',\r\n            schoolChuse: false,\r\n            status: null\r\n        }\r\n        this.statusSelect = this.statusSelect.bind(this);\r\n        this.groupSelect = this.groupSelect.bind(this);\r\n        this.schoolSelect = this.schoolSelect.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onPhoneChange = this.onPhoneChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let groups;\r\n        let allSchools=[];\r\n        schoolRef.on('value', snap => {\r\n            groups = snap.val();\r\n            groups.map(item => {\r\n                allSchools.push(item.school)\r\n            })\r\n            this.setState({\r\n                schools: allSchools\r\n            })\r\n        })\r\n    }\r\n    schoolSelect(e){\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo;\r\n        let allGroups=[];\r\n        schoolRef.on('value', snap => {\r\n            dbinfo = snap.val();\r\n            dbinfo.map(item => {\r\n                if(item.school === e.target.value){\r\n                    item.groups.map(item => {\r\n                        allGroups.push(item.name)\r\n                    })\r\n                } \r\n            })\r\n        })\r\n        this.setState({\r\n            school: e.target.value,\r\n            groups: allGroups,\r\n            schoolChuse: true\r\n        })\r\n    }\r\n    groupSelect(e){\r\n        this.setState({\r\n            group: e.target.value\r\n        })\r\n    }\r\n    statusSelect(e){\r\n        this.setState({\r\n            status: e.target.value\r\n        })\r\n    }\r\n    onPhoneChange(e) {\r\n        this.setState({\r\n            phone: e.target.value\r\n        })\r\n    }\r\n    onPasswordChange(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        const teacherRef = rootRef.child('teachers');\r\n        let dbinfo, dbinfoteacher;\r\n        let userInfo={}; \r\n        \r\n        if(this.state.status === 'Учень'){\r\n        schoolRef.on('value', snap => {\r\n            dbinfo = snap.val();\r\n            dbinfo.map(item=>{\r\n                if(item.school === this.state.school){\r\n                    item.groups.map(item=>{\r\n                        if(item.name === this.state.group){\r\n                            item.pupils.map(item=>{\r\n                                if(this.state.phone === item.phone && this.state.password === item.password){\r\n                                    //console.log('loged', item); записуємо учня у локалстор\r\n                                    userInfo.name = item.name;\r\n                                    userInfo.school = this.state.school;\r\n                                    userInfo.group = this.state.group;\r\n                                    userInfo.phone = item.phone;\r\n                                    userInfo.debt = item.debt;\r\n                                    userInfo.password = item.password;\r\n                                    //console.log(userInfo);\r\n                                    localStorage.setItem('studyLinkuser', JSON.stringify(userInfo));\r\n                                    window.location.hash = '#/home';\r\n                                    this.setState({ signOut: true })\r\n                                    //зміна пропсу у основній компоненті для зміни меню в залежності від залогованого учня\r\n                                    this.props.updateData(item.name)\r\n                                }else{\r\n                                    this.setState({ login: false })\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            }\r\n        )}\r\n        if(this.state.status === 'Вчитель'){\r\n            teacherRef.on('value', snap => {\r\n                dbinfoteacher = snap.val();\r\n                dbinfoteacher.map(item=>{\r\n                if(item.school === this.state.school){\r\n                    console.log(item.name)\r\n                    if(item.password === this.state.password){\r\n                        console.log('pass good')\r\n                    \r\n                        userInfo.name = item.name;\r\n                        userInfo.school = this.state.school;\r\n                        userInfo.group = null;\r\n                        userInfo.phone = null;\r\n                        userInfo.debt = null;\r\n                        userInfo.password = null;\r\n                        userInfo.status = 'teacher';\r\n                        console.log(userInfo);\r\n                        localStorage.setItem('studyLinkuser', JSON.stringify(userInfo));\r\n                        window.location.hash = '#/homeTeacher';\r\n                        this.setState({ signOut: true })\r\n                        //зміна пропсу у основній компоненті для зміни меню в залежності від залогованого учня\r\n                        this.props.updateData(item.name)\r\n                    }\r\n                    else{\r\n                        this.setState({ login: false })\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        }\r\n    }\r\n    render() {     \r\n        let school, groupChuse, loginAndPass, faillogin;\r\n        if(this.state.login === false){\r\n            faillogin = <Alert variant='danger'>Невірний логін або пароль</Alert> \r\n            setTimeout( ()=>{\r\n                faillogin = <div></div>\r\n                this.setState({login: null})\r\n            }, 3000);\r\n        }\r\n        if(this.state.login === true){\r\n            faillogin = <div></div>\r\n        }\r\n        if(this.state.schoolChuse && \r\n            this.state.status !== 'Вчитель' && \r\n            this.state.status !== 'Адміністратор' &&\r\n            this.state.status !== 'Call center'\r\n            ){\r\n            groupChuse = (\r\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                    <Form.Label>Назва групи</Form.Label>\r\n                    <Form.Control as=\"select\" onChange={this.groupSelect}>\r\n                        <option>Моя група</option>\r\n                        {   \r\n                            this.state.groups.map(item => \r\n                                <option key={item}>{item}</option>\r\n                            ) \r\n                        }\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            )\r\n        }\r\n        if(\r\n            (this.state.status === 'Вчитель'|| this.state.status === 'Учень')  && \r\n            this.state.school !== '' &&\r\n            this.state.group !== ''\r\n            ){\r\n            loginAndPass = (\r\n                <div>\r\n                    <Form.Group>\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control \r\n                            name=\"name\" \r\n                            type=\"text\" \r\n                            placeholder=\"Enter phone\" \r\n                            onChange={this.onPhoneChange}\r\n                            value={this.state.phone} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={this.onPasswordChange}\r\n                            value={this.state.password} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Увійти\r\n                    </Button>\r\n                </div>\r\n            )\r\n        }\r\n        if(this.state.status === 'Вчитель' && this.state.schoolChuse !== false){\r\n            loginAndPass = (\r\n                <div>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Ваш вчительський пароль</Form.Label>\r\n                        <Form.Control \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={this.onPasswordChange}\r\n                            value={this.state.password} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                            Увійти\r\n                    </Button>\r\n                </div>\r\n            )\r\n        }\r\n        if(this.state.status === 'Адміністратор'){\r\n            loginAndPass = (\r\n                <div>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password for admin</Form.Label>\r\n                        <Form.Control \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={this.onPasswordChange}\r\n                            value={this.state.password} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                    Увійти\r\n                    </Button>\r\n                </div>\r\n            )\r\n        }\r\n        if(this.state.status === 'Call center'){\r\n            loginAndPass = (\r\n                <div>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password fot call center</Form.Label>\r\n                        <Form.Control \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={this.onPasswordChange}\r\n                            value={this.state.password} />\r\n                    </Form.Group>\r\n                \r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                    Увійти\r\n                    </Button>\r\n                </div>\r\n            )\r\n        }\r\n        if(this.state.status === 'Вчитель'|| this.state.status === 'Учень'){\r\n            school = (\r\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                    <Form.Label>Назва закладу</Form.Label>\r\n                    <Form.Control as=\"select\" onChange={this.schoolSelect}>\r\n                            <option>Мій заклад</option>\r\n                        {\r\n                            this.state.schools.map(item => \r\n                                <option key={item}>{item}</option>\r\n                            )\r\n                        }\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            )\r\n        }\r\n        return ( \r\n            <div className=\"container w-50\"> \r\n            <br />\r\n                <Form onSubmit={this.onSubmit}>\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect3\">\r\n                        <Form.Label>Статус</Form.Label>\r\n                        <Form.Control as=\"select\" onChange={this.statusSelect}>\r\n                                <option>Мій статус</option>\r\n                                <option>Учень</option>\r\n                                <option>Вчитель</option>\r\n                                <option>Адміністратор</option>\r\n                                <option>Call center</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    {/*компонент для вибору закладу (школи)*/}\r\n                    {school}\r\n\r\n                    {/*компонент для вибору групи у даному закладі (школі)*/}\r\n                    {groupChuse}\r\n\r\n                    {/*помилка при невірному введеню логіна чи пароля*/}\r\n                    {faillogin}\r\n\r\n                    {/*логін і пароль відносно вибраного статусу*/}\r\n                    {loginAndPass}\r\n                    \r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, {Component} from \"react\";\r\nimport ReactWOW from 'react-wow';\r\nimport program from '../images/program.jpg';\r\nimport '../componentsStyle/LandingStyle.css';\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Landing extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: null,\r\n            loaded: false\r\n        }\r\n        \r\n    }\r\n    componentDidMount(){\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                loaded: true\r\n            })\r\n        }, 2000)\r\n    }\r\n    render() {\r\n        if(!this.state.loaded){\r\n            return <div className=\"loading\"> \r\n                    <ReactWOW animation='bounceInLeft' duration=\"2s\">\r\n                        <h1 className='logo'>Study Link</h1>\r\n                    </ReactWOW>\r\n                    <br/><br/>\r\n                    <ReactWOW animation='bounceInRight' duration=\"2s\">\r\n                        <h2>Курси програмування</h2>\r\n                    </ReactWOW>\r\n                    \r\n                </div>\r\n        }else{\r\n        return ( \r\n           <div>\r\n               <div className=\"Block0\">\r\n                    <h1 className='logo'>Study Link</h1>\r\n                    <br/><br/>\r\n                    <h2>Курси програмування</h2>\r\n                </div>\r\n                <div className='Block1'>\r\n                    <ReactWOW animation='bounceInLeft' duration=\"2s\">\r\n                        <div className='w-50 float_left bg1'>\r\n                            Умови: <br/>\r\n                            Для дітей 11-14 років. <br/>\r\n                            Заняття у компютерних класах з проектором. <br/>\r\n                            Заняття відбуваються раз у тиждень. <br/>\r\n                            Заняття триває - 1 годину 50 хвилин.\r\n                        </div>\r\n                    </ReactWOW>\r\n                    <ReactWOW animation='bounceInRight' duration=\"2s\">\r\n                        <div className='w-50 float_left bg2'>\r\n                            Навчимо: <br/>\r\n                            Створювати web-сайти. <br/>\r\n                            Мов: <a href=\"https://uk.wikipedia.org/wiki/HTML\"><span className='html'>html</span></a>\r\n                            , <a href=\"https://uk.wikipedia.org/wiki/CSS\"><span className='css'>css</span></a>\r\n                             та <a href=\"https://uk.wikipedia.org/wiki/JavaScript\"><span className='js'>javascript</span></a>. <br/>\r\n                            Користуватись <a href=\"https://uk.wikipedia.org/wiki/Git\"><span className='git'>git</span></a>. <br/>\r\n                            Користуватись додатковами програмами та сайтами для створення web-сторінок\r\n                        </div>\r\n                    </ReactWOW>\r\n                    <ReactWOW animation='jackInTheBox' duration=\"2s\">\r\n                        <div className='w-100 float_left bg3'>Перше заняття безкоштовно!</div>\r\n                    </ReactWOW>\r\n                    <ReactWOW animation='rotateInUpLeft' duration=\"1s\">\r\n                        <div className='w-100 float_left bg4'>\r\n                            <h1>По закінченю курсу ви отримуєте:</h1>\r\n                            <h3>Знання необхідні у будь-якій сфері web-розробки</h3>\r\n                            <h3>Роботи збережені у відкритому ресурсі</h3>\r\n                            <h3>Курсову роботу яку не соромно розмістити у резюме</h3>\r\n                            <h3>Сертифікат у разі успішного завершення курсу</h3>\r\n                        </div>\r\n                    </ReactWOW>\r\n                </div>\r\n               <img src={program} alt='program' width='80%'/>\r\n           </div>\r\n        );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport '../componentsStyle/LoaderStyle.css';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nclass Temes extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            temes: null,\r\n            username: null,\r\n            temesOpen: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const temesRef = rootRef.child('temes');\r\n        const schoolRef = rootRef.child('schools');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        //console.log(user)\r\n        let dbinfo, dbinfoSchools, temes_pass;\r\n        \r\n        schoolRef.on('value', snap =>{\r\n            dbinfoSchools = snap.val();\r\n            dbinfoSchools.map(item=>{\r\n                if(item.school === user.school){\r\n                    item.groups.map(item=>{\r\n                        if(item.name === user.group){\r\n                            temes_pass = item.temes_pass\r\n                            this.setState({\r\n                                temesOpen: item.temes_pass\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        temesRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            if(!this.state.loaded){\r\n                while(dbinfo.length > temes_pass){\r\n                    dbinfo.pop();\r\n                    //console.log(dbinfo, temes_pass)\r\n                }\r\n                this.setState({\r\n                    temes: dbinfo\r\n                })\r\n            }\r\n            this.setState({\r\n                username: user.name,\r\n                loaded: true\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <h1>Теми відкриті для {this.state.username}</h1>\r\n                    <Accordion defaultActiveKey=\"0\" align='left'>\r\n                    {\r\n                        this.state.temes.map(item=>(\r\n                            <Card key={item.tema}>\r\n                                <Accordion.Toggle as={Card.Header} eventKey={item.tema}>\r\n                                    {item.tema}\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey={item.tema}>\r\n                                <Card.Body>\r\n                                    {(item.task[0] !== \"\") ? <div>\r\n                                        <h5 align=\"left\">Завдання</h5>\r\n                                        <ol>\r\n                                        {item.task.map(item =>(\r\n                                            <li align='left' key={item}><a href={'https://kosaniakmarianone.github.io/' + item} target='blank'>Завдання</a></li>\r\n                                        ))}\r\n                                        </ol></div>: ''\r\n                                    }\r\n                                    {(item.materials !== \"\") ? <h5 align='left'><a href={item.materials} target='blank'>Матеріали</a></h5> : ''}\r\n                                    {(item.video !== \"\") ? <h5 align='left'><a href={item.video} target='blank'>Відео</a></h5> : ''}\r\n                                    {(item.video === \"\" && item.materials === \"\" && item.task[0] === \"\") ? 'Тема не відкрита, або розглядається лише на занятті': ''}\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        ))\r\n                    }\r\n                     </Accordion>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Temes;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport pay from '../images/pay.jpg';\r\n\r\n\r\nclass HowToPay extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loged: false\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            loaded: true\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        else{\r\n        return (\r\n            <div>\r\n                <h5>ЄДРПОУ 3580013618</h5>\r\n\r\n                <h5>У зв'язку з переведенням рахунків на IBAN формат, клієнтам всіх банків\r\n                    , крім ПриватБанк незручно оплачувати навчання\r\n                    . Підбивши підсумки,ми вирішили спростити систему оплати і рекомендуємо наступне.\r\n                </h5>\r\n                <ol align='left'>\r\n                    <li>Клієнтам Приватбанку оплачувати навчання за допомогою QR коду. \r\n                        <img src={pay} alt='how to pay' align='right'/>\r\n                    </li>\r\n                    <li>Клієнтам інших банківw оплачувати на сайті за\r\n                        <a href='https://next.privat24.ua/payments/dashboard/'>посиланням</a>\r\n                        . В формі пишите наданий вище код ЄДРПОУ, тисните пошук, вибираєте Руссу В.С\r\n                        ., ФОП, інше (курси,...).\r\n                        Заповнюєте форму і відправляєте платіж.\r\n                    </li>\r\n                </ol>\r\n                <h5>Комісія 1 грн,в незалежності від банку</h5>\r\n\r\n                <h2>Для власників карти приватбанку є зручний спосіб оплати.</h2>\r\n               \r\n            </div>\r\n        );\r\n        }\r\n    }\r\n}\r\nexport default HowToPay;","import React, {Component} from \"react\";\r\nimport * as firebase from 'firebase';\r\nimport '../componentsStyle/LoaderStyle.css';\r\nimport '../componentsStyle/Stream.css';\r\n\r\nclass Stream extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            userGroup: '',\r\n            userSchool: '',\r\n            username: 'користувач',\r\n            userInfo: [],\r\n            temesOpen: null,\r\n            debt: null,\r\n            allTemsPased: [],\r\n            minTemesGroup: null,\r\n            maxTemeGroup: null,\r\n            streamUrl: ''\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        const streamRef = rootRef.child('stream');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        let dbinfo, stream, minTem = 30, maxTem = 0;\r\n        let allTemsPased = [];\r\n        streamRef.on('value', snap =>{\r\n            stream = snap.val();\r\n            console.log(stream);\r\n            this.setState({\r\n                streamUrl: stream\r\n            })\r\n        })\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val()\r\n            this.setState({\r\n                userInfo: dbinfo\r\n            })\r\n            setTimeout(()=>{this.state.userInfo.map(item => {\r\n                if(item.school === user.school){\r\n                    item.groups.map(item => {\r\n                        if(item.name === user.group){\r\n                            item.pupils.map(item => {\r\n                                if(item.name === user.name){\r\n                                    this.setState({\r\n                                        debt: item.debt\r\n                                    })\r\n                                }\r\n                            })\r\n                            //інфа про кількість тем відкритих і відвіданих занять\r\n                            this.setState({\r\n                                username: user.name,\r\n                                temesOpen:  item.temes_open,\r\n                                temesPass:  item.temes_pass,\r\n                                allTemsPased: allTemsPased\r\n                            })\r\n                            \r\n                        }\r\n                        allTemsPased.push(item);\r\n                        allTemsPased.map(item=>{\r\n                            if(item.temes_pass < minTem){\r\n                                minTem = item.temes_pass\r\n                            }\r\n                            if(item.temes_pass > maxTem){\r\n                                maxTem = item.temes_pass\r\n                            }\r\n                        })\r\n                        this.setState({ \r\n                            userGroup: user.group,\r\n                            userSchool: user.school, \r\n                            minTemesGroup: minTem,\r\n                            maxTemesGroup: maxTem,\r\n                            loaded: true\r\n                         })\r\n                    })\r\n                    \r\n                }\r\n            })}, 2000)\r\n            \r\n        })\r\n        \r\n    }\r\n    render(){\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h3>Увага! У звязку з карантином учні довгий час не відвідували заняття.<br/> \r\n                        Тому ми вирішили провести <span className=\"green\">безкоштовну</span> пряму трансляцію для повторення вивченого матеріалу.\r\n                    </h3>\r\n\r\n                    <h4 className=\"red\">Стрім відбудеться 05.04.2020 ( у Неділю ). Початок трансляції 12:00.</h4>\r\n                    \r\n                    \r\n                    <h4>Бажаємо вам міцного здоров'я! </h4>\r\n\r\n\r\n                    <br/><br/><br/>\r\n                    <h3>Стрім №1 (Теми 1-13)</h3>\r\n                    <iframe width=\"560\" height=\"315\" \r\n                    src=\"https://www.youtube.com/embed/kuiZLS-8Rjo\" frameborder=\"0\" \r\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n                    allowfullscreen></iframe>\r\n                    <br/><br/>\r\n                    <h3>Стрім №2 (Теми 14-...)</h3>\r\n                    <br/><br/>\r\n                    <iframe width=\"560\" height=\"315\" \r\n                        src=\"https://www.youtube.com/embed/fE7lYl2NRcE?start=530\" \r\n                        frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowfullscreen>\r\n\r\n                     </iframe>\r\n                </div>\r\n            )\r\n        } \r\n    }\r\n}\r\nexport default Stream;","import React, {Component} from \"react\";\r\nimport * as firebase from 'firebase';\r\nimport '../componentsStyle/LoaderStyle.css';\r\nimport '../componentsStyle/HomeStyle.css';\r\n\r\nclass Online extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            online: null,\r\n            user: '',\r\n            onlineHref: ' '\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const onlineRef = rootRef.child('online');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        let dbinfo;\r\n        onlineRef.on('value', snap =>{\r\n            dbinfo = snap.val()\r\n            this.setState({\r\n                online: dbinfo\r\n            })\r\n           \r\n            \r\n        })\r\n        setTimeout(()=>{\r\n            this.state.online.map(item=>{\r\n                if(item.name === user.group){\r\n                    this.setState({\r\n                        onlineHref: item.href\r\n                    })\r\n                }\r\n            })\r\n            this.setState({\r\n                user: user,\r\n                loaded: true\r\n            })\r\n        }, 2000)\r\n    }\r\n    render(){\r\n     \r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h1>\r\n                        Для переходу розмови групи {this.state.user.group} у skype перейдіть за посиланням - \r\n                        <a href={this.state.onlineHref}>Перейти</a>\r\n                    </h1>\r\n                   {console.log(this.state.user.group, this.state.online)}\r\n                </div>\r\n            )\r\n        } \r\n    }\r\n}\r\nexport default Online;","import React, {Component} from 'react';\r\nimport { HashRouter, Route} from \"react-router-dom\";\r\nimport Header from './components/Header';\r\nimport Home from './components/Home';\r\nimport HomeTeacher from './components/HomeTeacher';\r\nimport TeacherGroups from './components/TeacherGroups';\r\nimport Admin from './components/Admin';\r\nimport SignIn from './components/SignIn';\r\nimport Landing from './components/Landing';\r\nimport Temes from './components/Temes';\r\nimport HowToPay from './components/HowToPay';\r\nimport Stream from './components/Stream';\r\nimport Online from './components/Online';\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: this.props.username,\r\n            loged: false\r\n        }\r\n        this.updateData = this.updateData.bind(this)\r\n        this.updateLoged = this.updateLoged.bind(this)\r\n\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.username !== null){\r\n        this.setState({ \r\n            loged: true,\r\n            username: this.props.username,\r\n            userschool: this.props.userschool,\r\n            usergroup: this.props.usergroup,\r\n         })\r\n        }\r\n    }\r\n    updateData = (value) => {\r\n        this.setState({ username: value, loged: true});\r\n    }\r\n    updateLoged = (value) => {\r\n        this.setState({ loged: value});\r\n    }\r\n    render() {\r\n        return (\r\n            <HashRouter basename='/'>\r\n              <div className=\"App\" align='center'>\r\n                  <Route path='/'  render={() => (<Header\r\n                    username={this.state.username} \r\n                    loged={this.state.loged} \r\n                    updateLoged={this.updateLoged}\r\n                    usergroup={this.props.usergroup}/>)\r\n                  }/>\r\n\r\n                  <Route exact path='/' component={Landing}/>\r\n\r\n                  <Route exact path='/landing' component={Landing}/>\r\n\r\n                  <Route exact path='/home' component={Home}/>\r\n\r\n                  <Route exact path='/homeTeacher' component={HomeTeacher}/>\r\n\r\n                  <Route exact path='/TeacherGroups' component={TeacherGroups}/>\r\n\r\n                  <Route exact path='/temes' component={Temes}/>\r\n\r\n                  <Route exact path='/howtopay' component={HowToPay}/>\r\n\r\n                  <Route exact path='/stream' component={Stream}/>\r\n\r\n                  <Route exact path='/online' component={Online}/>\r\n\r\n                  <Route exact path='/admin' component={Admin}/>\r\n\r\n                  <Route path='/SignIn' render={() => (<SignIn updateData={this.updateData}/>)}/>\r\n              </div>\r\n          </HashRouter>\r\n        );\r\n    }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as firebase from 'firebase';\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDHAQfudekbBrh4WeEyhi9XZ4tPyuU-nHQ\",\r\n    authDomain: \"studylink-62a6b.firebaseapp.com\",\r\n    databaseURL: \"https://studylink-62a6b.firebaseio.com\",\r\n    projectId: \"studylink-62a6b\",\r\n    storageBucket: \"studylink-62a6b.appspot.com\",\r\n    messagingSenderId: \"710063505158\",\r\n    appId: \"1:710063505158:web:4573c8d89733fc2025e887\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  let user;\r\n  if(localStorage.getItem('studyLinkuser') !== null){\r\n    user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n  }\r\n  if(localStorage.getItem('studyLinkuser') == null){\r\n    user = {\r\n      name: null,\r\n      school: null,\r\n      group: null,\r\n      phone: null,\r\n      debt: null\r\n  }\r\n}\r\nReactDOM.render(<App \r\n  username={user.name}\r\n  userschool={user.school} \r\n  usergroup={user.group} \r\n  userphone={user.phone} \r\n  userdebt={user.debt}/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/program.09ba2146.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pay.cd8dbeca.jpg\";"],"sourceRoot":""}