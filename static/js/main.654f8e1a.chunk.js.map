{"version":3,"sources":["images/program.jpg","images/pay.jpg","components/Header.js","components/Home.js","components/Admin.js","components/SignIn.js","components/Landing.js","components/Temes.js","components/HowToPay.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","state","loged","username","onlogOut","bind","this","setState","updateLoged","window","location","href","localStorage","removeItem","menuUser","Nav","Link","onClick","Navbar","collapseOnSelect","expand","bg","variant","Brand","console","log","Toggle","aria-controls","Collapse","id","className","Component","Home","loaded","userInfo","temesOpen","debt","dbinfo","schoolRef","firebase","ref","child","user","JSON","parse","getItem","on","snap","val","setTimeout","map","item","school","groups","name","group","pupils","temes_open","temesPass","temes_pass","Admin","schools","key","align","breakpoint","ListGroup","horizontal","Item","password","SignIn","signOut","login","phone","groupSeleced","schoolChuse","groupSelect","schoolSelect","onSubmit","onPhoneChange","onPasswordChange","allSchools","push","e","allGroups","target","value","preventDefault","setItem","stringify","hash","updateData","faillogin","Alert","Form","Group","controlId","Label","Control","as","onChange","type","placeholder","Button","Landing","src","program","alt","Temes","temes","rootRef","temesRef","length","pop","Accordion","defaultActiveKey","Card","tema","eventKey","Body","task","materials","video","HowToPay","pay","App","userschool","usergroup","basename","path","render","exact","component","Boolean","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","userphone","userdebt","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.654f8e1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/program.09ba2146.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pay.daecf0bb.jpg\";","import React, {Component} from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loged: this.props.loged,\r\n            username: this.props.username\r\n        }\r\n\r\n        this.onlogOut = this.onlogOut.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.username !== null){\r\n            this.setState({loged: true})\r\n        }\r\n    }\r\n    onlogOut(){\r\n        this.props.updateLoged(false)\r\n        window.location.href = '#/Landing';\r\n        localStorage.removeItem('studyLinkuser');\r\n    }\r\n    render() {\r\n        let menuUser;\r\n        if(this.props.loged){\r\n            menuUser = (\r\n                <Nav>\r\n                    <Nav.Link>Увійдено як {this.props.username}</Nav.Link>\r\n                    <Nav.Link onClick={this.onlogOut}>Вийти</Nav.Link>\r\n                </Nav>\r\n                )\r\n        }else{\r\n            menuUser = (\r\n                <Nav>\r\n                    <Nav.Link href=\"#/SignIn\">Увійти</Nav.Link>\r\n                </Nav>\r\n            )\r\n        }\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#/landing\">StudyLink</Navbar.Brand>\r\n            {console.log(this.props)}\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                    <Nav>\r\n                        <Nav.Link href=\"#/home\">Головна</Nav.Link>\r\n                        <Nav.Link href=\"#/temes\">Навчання</Nav.Link>\r\n                        <Nav.Link href=\"#/howtopay\">Як оплатити?</Nav.Link>\r\n                    </Nav>\r\n                    </Nav>\r\n                    {menuUser}    \r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport * as firebase from 'firebase';\r\nimport '../componentsStyle/LoaderStyle.css';\r\nimport '../componentsStyle/HomeStyle.css';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            username: '',\r\n            userInfo: [],\r\n            temesOpen: null,\r\n            debt: null\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        let dbinfo;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val()\r\n            this.setState({\r\n                userInfo: dbinfo\r\n            })\r\n            setTimeout(()=>{this.state.userInfo.map(item => {\r\n                if(item.school === user.school){\r\n                    item.groups.map(item => {\r\n                        if(item.name === user.group){\r\n                            //console.log(item)\r\n                            item.pupils.map(item => {\r\n                                if(item.name === user.name){\r\n                                    this.setState({\r\n                                        debt: item.debt\r\n                                    })\r\n                                }\r\n                            })\r\n                            //інфа про кількість тем відкритих і відвіданих занять\r\n                            this.setState({\r\n                                username: user.name,\r\n                                temesOpen:  item.temes_open,\r\n                                temesPass:  item.temes_pass\r\n                            })\r\n                        }\r\n                    })\r\n                    \r\n                }\r\n            })}, 2000)\r\n            \r\n        })\r\n        setTimeout(()=>this.setState({ loaded: true}), 2000)\r\n    }\r\n    render() {\r\n        let debtInfo;\r\n        if(this.state.debt !== ''){\r\n            debtInfo = <h2>Увага у вас є ззаборгованість <b className='red'>{this.state.debt}грн</b></h2>\r\n        }\r\n        if(this.state.debt === ''){\r\n            debtInfo = <div></div>\r\n        }\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h1>Вітаю {this.state.username}!</h1>\r\n                    <h3>Відвідано {this.state.temesPass} занять</h3>\r\n                    {/*<h3>Оплачено {Math.ceil(this.state.temesPass/4)*4} занять</h3>\r\n                    <h3>Наступна оплата через {Math.ceil(this.state.temesPass/4)*4 - this.state.temesPass} заняття</h3>\r\n                    {debtInfo}*/}\r\n                </div>\r\n            );\r\n        } \r\n    }\r\n}\r\nexport default Home;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport  '../componentsStyle/AdminStyle.css';\r\nimport '../componentsStyle/LoaderStyle.css';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nclass Admin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            schools: null\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            this.setState({\r\n                schools: dbinfo,\r\n                loaded: true\r\n            })\r\n        })\r\n        \r\n    }\r\n    render() {\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h1 className='ff-c'>Усі школи і гупи</h1>\r\n                    {\r\n                    this.state.schools.map(item =>(\r\n                    <div key={item.school}>\r\n                        <h1 className='blue ff-c'>{item.school}</h1>\r\n                        <div>\r\n                            {item.groups.map(item =>(\r\n                                <div key={item.name}>\r\n                                    <h3 align='left' className='gray ff-c ml-30 mt-20'>{item.name} (занять відбулось - {item.temes_pass})</h3>\r\n                                    {item.pupils.map(breakpoint => (\r\n                                        <ListGroup horizontal key={breakpoint.name}>\r\n                                            <ListGroup.Item className='width-250'>{breakpoint.name}</ListGroup.Item>\r\n                                            <ListGroup.Item className='width-250'>{breakpoint.password}</ListGroup.Item>\r\n                                            <ListGroup.Item className='width-100'>{breakpoint.debt}</ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    ))}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    ))\r\n                    }\r\n                    \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Admin;","import React, {Component} from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as firebase from 'firebase';\r\n\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signOut: false,\r\n            login: null,\r\n            phone: '',\r\n            password: '',\r\n            schools: [],\r\n            groups: [],\r\n            school: '',\r\n            groupSeleced: '',\r\n            schoolChuse: false\r\n        }\r\n        this.groupSelect = this.groupSelect.bind(this);\r\n        this.schoolSelect = this.schoolSelect.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onPhoneChange = this.onPhoneChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let groups;\r\n        let allSchools=[];\r\n        schoolRef.on('value', snap => {\r\n            groups = snap.val();\r\n            groups.map(item => {\r\n                allSchools.push(item.school)\r\n            })\r\n            this.setState({\r\n                schools: allSchools\r\n            })\r\n        })\r\n    }\r\n    schoolSelect(e){\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo;\r\n        let allGroups=[];\r\n        schoolRef.on('value', snap => {\r\n            dbinfo = snap.val();\r\n            dbinfo.map(item => {\r\n                if(item.school === e.target.value){\r\n                    item.groups.map(item => {\r\n                        allGroups.push(item.name)\r\n                    })\r\n                } \r\n            })\r\n        })\r\n        this.setState({\r\n            school: e.target.value,\r\n            groups: allGroups,\r\n            schoolChuse: true\r\n        })\r\n    }\r\n    groupSelect(e){\r\n        this.setState({\r\n            group: e.target.value\r\n        })\r\n    }\r\n    onPhoneChange(e) {\r\n        this.setState({\r\n            phone: e.target.value\r\n        })\r\n    }\r\n    onPasswordChange(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo;\r\n        let userInfo={};\r\n        schoolRef.on('value', snap => {\r\n            dbinfo = snap.val();\r\n            dbinfo.map(item=>{\r\n                if(item.school === this.state.school){\r\n                    item.groups.map(item=>{\r\n                        if(item.name === this.state.group){\r\n                            item.pupils.map(item=>{\r\n                                if(this.state.phone === item.phone && this.state.password === item.password){\r\n                                    //console.log('loged', item);\r\n                                    userInfo.name = item.name;\r\n                                    userInfo.school = this.state.school;\r\n                                    userInfo.group = this.state.group;\r\n                                    userInfo.phone = item.phone;\r\n                                    userInfo.debt = item.debt;\r\n                                    userInfo.password = item.password;\r\n                                    //console.log(userInfo);\r\n                                    localStorage.setItem('studyLinkuser', JSON.stringify(userInfo));\r\n                                    window.location.hash = '#/home';\r\n                                    this.setState({\r\n                                        signOut: true\r\n                                    })\r\n                                    this.props.updateData(item.name)\r\n                                }else{\r\n                                    this.setState({\r\n                                        login: false\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        \r\n    }\r\n    render() {     \r\n        let faillogin, schoolChuse;\r\n        if(this.state.login === false){\r\n            faillogin = <Alert variant='danger'> Wrong phone number or passwor</Alert> \r\n            setTimeout( ()=>{\r\n                faillogin = <div></div>\r\n                this.setState({login: null})\r\n            }, 3000);\r\n        }\r\n        if(this.state.login === true){\r\n            faillogin = <div></div>\r\n        }\r\n        if(this.state.schoolChuse){\r\n            schoolChuse = <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                <Form.Label>Назва групи</Form.Label>\r\n                <Form.Control as=\"select\" onChange={this.groupSelect}>\r\n                    <option>Моя група</option>\r\n                    {   \r\n                        this.state.groups.map(item => \r\n                            <option key={item}>{item}</option>\r\n                        ) \r\n                    }\r\n                </Form.Control>\r\n            </Form.Group>\r\n        }\r\n        return ( \r\n            <div className=\"container w-50\"> \r\n            <br />\r\n                <Form onSubmit={this.onSubmit}>\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Назва закладу</Form.Label>\r\n                        <Form.Control as=\"select\" onChange={this.schoolSelect}>\r\n                                <option>Мій заклад</option>\r\n                            {\r\n                                this.state.schools.map(item => \r\n                                    <option key={item}>{item}</option>\r\n                                )\r\n                            }\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                        \r\n                    {schoolChuse}\r\n\r\n                    {faillogin}\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control \r\n                            name=\"name\" \r\n                            type=\"text\" \r\n                            placeholder=\"Enter phone\" \r\n                            onChange={this.onPhoneChange}\r\n                            value={this.state.phone} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={this.onPasswordChange}\r\n                            value={this.state.password} />\r\n                    </Form.Group>\r\n                    \r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Sign in\r\n                    </Button>\r\n                </Form>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, {Component} from \"react\";\r\nimport program from '../images/program.jpg';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Landing extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: null\r\n        }\r\n        \r\n    }\r\n    componentDidMount(){\r\n        \r\n    }\r\n    render() {\r\n        return ( \r\n           <div>\r\n               <img src={program} alt='program'/>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport '../componentsStyle/LoaderStyle.css';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nclass Temes extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            temes: null,\r\n            username: null,\r\n            temesOpen: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const temesRef = rootRef.child('temes');\r\n        const schoolRef = rootRef.child('schools');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        //console.log(user)\r\n        let dbinfo, dbinfoSchools;\r\n        \r\n        schoolRef.on('value', snap =>{\r\n            dbinfoSchools = snap.val();\r\n            dbinfoSchools.map(item=>{\r\n                if(item.school === user.school){\r\n                    item.groups.map(item=>{\r\n                        if(item.name === user.group){\r\n                            this.setState({\r\n                                temesOpen: item.temes_open\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        temesRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            while(dbinfo.length > this.state.temesOpen){\r\n                dbinfo.pop();\r\n            }\r\n            this.setState({\r\n                temes: dbinfo,\r\n                username: user.name,\r\n                loaded: true\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <h1>Теми відкриті для {this.state.username}</h1>\r\n                    <Accordion defaultActiveKey=\"0\" align='left'>\r\n                        {console.log(this.state.temes)}\r\n                    {\r\n                        this.state.temes.map(item=>(\r\n                            <Card key={item.tema}>\r\n                                <Accordion.Toggle as={Card.Header} eventKey={item.tema}>\r\n                                    {item.tema}\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey={item.tema}>\r\n                                <Card.Body>\r\n                                    {(item.task[0] !== \"\") ? <div>\r\n                                        <h5 align=\"left\">Завдання</h5>\r\n                                        <ol>\r\n                                        {item.task.map(item =>(\r\n                                            <li align='left' key={item}><a href={'https://kosaniakmarianone.github.io/' + item} target='blank'>Завдання</a></li>\r\n                                        ))}\r\n                                        </ol></div>: ''\r\n                                    }\r\n                                    {(item.materials !== \"\") ? <h5 align='left'><a href={item.materials} target='blank'>Матеріали</a></h5> : ''}\r\n                                    {(item.video !== \"\") ? <h5 align='left'><a href={item.video} target='blank'>Відео</a></h5> : ''}\r\n                                    {(item.video === \"\" && item.materials === \"\" && item.task[0] === \"\") ? 'Тема не відкрита, або розглядається лише на занятті': ''}\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        ))\r\n                    }\r\n                     </Accordion>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Temes;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport pay from '../images/pay.jpg';\r\n\r\n\r\nclass HowToPay extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loged: false\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            loaded: true\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        else{\r\n        return (\r\n            <div>\r\n                <h2>Для власників карти приватбанку є зручний спосіб оплати.</h2>\r\n                <img src={pay} alt='how to pay'/>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n}\r\nexport default HowToPay;","import React, {Component} from 'react';\nimport { HashRouter, Route} from \"react-router-dom\";\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Admin from './components/Admin';\nimport SignIn from './components/SignIn';\nimport Landing from './components/Landing';\nimport Temes from './components/Temes';\nimport HowToPay from './components/HowToPay';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: this.props.username\n        }\n        this.updateData = this.updateData.bind(this)\n        this.updateLoged = this.updateLoged.bind(this)\n\n    }  \n    componentDidMount(){\n        this.setState({ \n            loged: true,\n            username: this.props.username,\n            userschool: this.props.userschool,\n            usergroup: this.props.usergroup,\n         })\n    }\n    updateData = (value) => {\n        this.setState({ username: value, loged: true});\n    }\n    updateLoged = (value) => {\n        this.setState({ loged: value});\n    }\n    render() {\n        return (\n            <HashRouter basename='/'>\n              <div className=\"App\" align='center'>\n                  {console.log(this.props)}\n                \n                  <Route path='/'  render={() => (<Header  username={this.state.username} loged={this.state.loged} updateLoged={this.updateLoged}/>)}/>\n\n                  <Route exact path='/' component={Landing}/>\n\n                  <Route exact path='/landing' component={Landing}/>\n\n                  <Route exact path='/home' component={Home}/>\n\n                  <Route exact path='/temes' component={Temes}/>\n\n                  <Route exact path='/howtopay' component={HowToPay}/>\n\n                  <Route exact path='/admin' component={Admin}/>\n\n                  <Route path='/SignIn' render={() => (<SignIn updateData={this.updateData}/>)}/>\n              </div>\n          </HashRouter>\n        );\n    }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDHAQfudekbBrh4WeEyhi9XZ4tPyuU-nHQ\",\n    authDomain: \"studylink-62a6b.firebaseapp.com\",\n    databaseURL: \"https://studylink-62a6b.firebaseio.com\",\n    projectId: \"studylink-62a6b\",\n    storageBucket: \"studylink-62a6b.appspot.com\",\n    messagingSenderId: \"710063505158\",\n    appId: \"1:710063505158:web:4573c8d89733fc2025e887\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  let user;\n  if(localStorage.getItem('studyLinkuser') !== null){\n    user = JSON.parse(localStorage.getItem('studyLinkuser'));\n  }\n  if(localStorage.getItem('studyLinkuser') == null){\n    user = {\n      name: null,\n      school: null,\n      group: null,\n      phone: null,\n      debt: null\n  }\n}\nReactDOM.render(<App \n  username={user.name}\n  userschool={user.school} \n  usergroup={user.group} \n  userphone={user.phone} \n  userdebt={user.debt}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}