{"version":3,"sources":["images/program.jpg","images/pay.jpg","components/Header.js","components/Home.js","components/Admin.js","components/SignIn.js","components/Landing.js","components/Temes.js","components/HowToPay.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","state","loged","username","onlogOut","bind","this","setState","updateLoged","window","location","href","localStorage","removeItem","menuUser","links","Nav","Link","onClick","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","className","Component","Home","loaded","userGroup","userSchool","userInfo","temesOpen","debt","allTemsPased","minTemesGroup","maxTemeGroup","dbinfo","schoolRef","firebase","ref","child","user","JSON","parse","getItem","minTem","maxTem","on","snap","val","setTimeout","map","item","school","groups","name","group","pupils","temes_open","temesPass","temes_pass","push","maxTemesGroup","align","key","Admin","schools","passCheck","password","debtSum","addTemes","delTemes","addSum","addPay","onSubmit","changePassword","admininfo","rootRef","adminRef","adminPassword","e","et","target","value","newtemes","length","Number","parseInt","link","update","pupil","preventDefault","i","newschool","newgroup","Form","Group","controlId","Label","Control","type","placeholder","onChange","Button","ListGroup","horizontal","Item","breakpoint","style","visibility","SignIn","signOut","login","phone","groupSeleced","schoolChuse","groupSelect","schoolSelect","onPhoneChange","onPasswordChange","allSchools","allGroups","setItem","stringify","hash","updateData","faillogin","Alert","as","Landing","src","program","alt","Temes","temes","temesRef","pop","Accordion","defaultActiveKey","Card","tema","eventKey","Body","task","materials","video","HowToPay","pay","App","userschool","usergroup","basename","path","render","exact","component","Boolean","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","userphone","userdebt","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f9bade3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/program.09ba2146.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pay.daecf0bb.jpg\";","import React, {Component} from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loged: this.props.loged,\r\n            username: this.props.username\r\n        }\r\n\r\n        this.onlogOut = this.onlogOut.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.username !== null){\r\n            this.setState({loged: true})\r\n        }\r\n    }\r\n    onlogOut(){\r\n        this.props.updateLoged(false)\r\n        window.location.href = '#/Landing';\r\n        localStorage.removeItem('studyLinkuser');\r\n    }\r\n    render() {\r\n        let menuUser, links;\r\n        if(this.props.loged){\r\n            menuUser = (\r\n                <Nav>\r\n                    <Nav.Link>Увійдено як {this.props.username}</Nav.Link>\r\n                    <Nav.Link onClick={this.onlogOut}>Вийти</Nav.Link>\r\n                </Nav>\r\n                )\r\n            links = (\r\n                <Nav>        \r\n                    <Nav.Link href=\"#/home\">Головна</Nav.Link>\r\n                        <Nav.Link href=\"#/temes\">Навчання</Nav.Link>\r\n                    <Nav.Link href=\"#/howtopay\">Як оплатити?</Nav.Link>\r\n                </Nav>\r\n            )\r\n            \r\n        }\r\n        if(!this.props.loged){\r\n            menuUser = (\r\n                <Nav>\r\n                    <Nav.Link href=\"#/SignIn\">Увійти</Nav.Link>\r\n                </Nav>\r\n            )\r\n        }\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#/landing\">StudyLink</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        {links}\r\n                    </Nav>\r\n                    {menuUser}    \r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport * as firebase from 'firebase';\r\nimport '../componentsStyle/LoaderStyle.css';\r\nimport '../componentsStyle/HomeStyle.css';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            userGroup: '',\r\n            userSchool: '',\r\n            username: 'користувач',\r\n            userInfo: [],\r\n            temesOpen: null,\r\n            debt: null,\r\n            allTemsPased: [],\r\n            minTemesGroup: null,\r\n            maxTemeGroup: null\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        let dbinfo, minTem = 30, maxTem = 0;\r\n        let allTemsPased = [];\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val()\r\n            this.setState({\r\n                userInfo: dbinfo\r\n            })\r\n            setTimeout(()=>{this.state.userInfo.map(item => {\r\n                if(item.school === user.school){\r\n                    item.groups.map(item => {\r\n                        if(item.name === user.group){\r\n                            item.pupils.map(item => {\r\n                                if(item.name === user.name){\r\n                                    this.setState({\r\n                                        debt: item.debt\r\n                                    })\r\n                                }\r\n                            })\r\n                            //інфа про кількість тем відкритих і відвіданих занять\r\n                            this.setState({\r\n                                username: user.name,\r\n                                temesOpen:  item.temes_open,\r\n                                temesPass:  item.temes_pass,\r\n                                allTemsPased: allTemsPased\r\n                            })\r\n                            \r\n                        }\r\n                        allTemsPased.push(item);\r\n                        allTemsPased.map(item=>{\r\n                            if(item.temes_pass < minTem){\r\n                                minTem = item.temes_pass\r\n                            }\r\n                            if(item.temes_pass > maxTem){\r\n                                maxTem = item.temes_pass\r\n                            }\r\n                        })\r\n                        this.setState({ \r\n                            userGroup: user.group,\r\n                            userSchool: user.school, \r\n                            minTemesGroup: minTem,\r\n                            maxTemesGroup: maxTem,\r\n                            loaded: true\r\n                         })\r\n                    })\r\n                    \r\n                }\r\n            })}, 2000)\r\n            \r\n        })\r\n        \r\n    }\r\n    render(){\r\n        /*let debtInfo;\r\n        if(this.state.debt !== ''){\r\n            debtInfo = <h2>Увага у вас є ззаборгованість <b className='red'>{this.state.debt}грн</b></h2>\r\n        }\r\n        if(this.state.debt === ''){\r\n            debtInfo = <div></div>\r\n        }*/\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h2 className='headerInfoUser'>Інформація про користувача</h2>\r\n                    <div className='userInfo'>\r\n                        <h2>Вітаю {this.state.username}!</h2>\r\n                        <h3>Ви проходите курс HTML/CSS у групі {this.state.userGroup}.</h3>\r\n                            <h3>\r\n                                {(this.state.userGroup[6] === 's') ? <span>Неділя </span>: <span>Субота </span>}\r\n                                {(this.state.userGroup[5] === '1') ? <span> 10:00</span>: ''}\r\n                                {(this.state.userGroup[5] === '2') ? <span> 12:00</span>: ''}\r\n                                {(this.state.userGroup[5] === '3') ? <span> 14:00</span>: ''}\r\n                                {(this.state.userGroup[5] === '4') ? <span> 16:00</span>: ''}\r\n                            </h3>\r\n                        <h3>Відбулось {this.state.temesPass} занять</h3>\r\n                    </div>\r\n\r\n                    <h2 className='headerInfoGroups'>Інформація про групи у закладі {this.state.userSchool}</h2>\r\n                    <div align='center' className='allGroups'>\r\n                        { this.state.allTemsPased.map(item=>(\r\n                            <div key={item.name} className='groups'>\r\n                                У групі {item.name} відбулось: {item.temes_pass} занять\r\n                            </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    {(this.state.temesPass > this.state.minTemesGroup) ? (\r\n                    <div>\r\n                        <h2 className='headerInfoGroups'>Пропустили заняття?</h2>\r\n                        <div className='userInfo'>\r\n                            <h4>Відвідати пропущене заняття №{this.state.temesPass} можна у іншій групі вашого закладу</h4>\r\n                            <h5 className='red'><span >Увага!!! </span>Пропускати заняття без важливої не можна. \r\n                            Кількість мість у групах обмежена. Про бажання прийти на пропущене \r\n                            заняття до іншої групи потрібно попередити вчителя.</h5>\r\n                            <h4>Групи з якими можна буде відвідати пропущене заняття №{this.state.temesPass}:</h4>\r\n                            \r\n                            { this.state.allTemsPased.map(item=>(\r\n                                <div key={item.name}>\r\n                                    {(item.temes_pass < this.state.temesPass) ?\r\n                                        <div>\r\n                                            {(item.name[6] === 's') ? <h4>Неділя</h4>: <h4>Субота</h4>}\r\n                                            <h5>\r\n                                                Група {item.name} [&nbsp; час - \r\n                                                {(item.name[5] === '1') ? <span> 10:00</span>: ''}\r\n                                                {(item.name[5] === '2') ? <span> 12:00</span>: ''}\r\n                                                {(item.name[5] === '3') ? <span> 14:00</span>: ''}\r\n                                                {(item.name[5] === '4') ? <span> 16:00</span>: ''}\r\n                                                &nbsp;]\r\n                                            </h5>\r\n                                        </div> : <div></div>}\r\n                                </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        {/*<h3>Оплачено {Math.ceil(this.state.temesPass/4)*4} занять</h3>\r\n                        <h3>Наступна оплата через {Math.ceil(this.state.temesPass/4)*4 - this.state.temesPass} заняття</h3>\r\n                        {debtInfo}*/}\r\n                    </div>) : <div></div>}\r\n                </div>\r\n            )\r\n        } \r\n    }\r\n}\r\nexport default Home;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport  '../componentsStyle/AdminStyle.css';\r\nimport '../componentsStyle/LoaderStyle.css';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nclass Admin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            schools: null,\r\n            passCheck: false,\r\n            password: null,\r\n            debtSum: null\r\n        }\r\n\r\n        this.addTemes = this.addTemes.bind(this)\r\n        this.delTemes = this.delTemes.bind(this)\r\n        this.addSum = this.addSum.bind(this)\r\n        this.addPay = this.addPay.bind(this)     \r\n        this.onSubmit = this.onSubmit.bind(this) \r\n        this.changePassword = this.changePassword.bind(this) \r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        const adminRef = rootRef.child('admin');\r\n        let dbinfo, admininfo;\r\n        schoolRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            this.setState({\r\n                schools: dbinfo,\r\n                loaded: true\r\n            })\r\n        })\r\n        adminRef.on('value', snap =>{\r\n            admininfo = snap.val();\r\n            //console.log(admininfo)\r\n            this.setState({\r\n                adminPassword: admininfo.password\r\n            })\r\n        })\r\n        \r\n    }\r\n    addTemes(e){\r\n        //console.log('add teme',e.target.value)\r\n        let et = e.target.value;\r\n        let school = et[0];\r\n        let group = et[1];\r\n        let newtemes = 0;\r\n        if(et.length === 3){\r\n            newtemes = Number.parseInt(et[2]) + 1;\r\n        }\r\n        if(et.length === 4){\r\n            newtemes = Number.parseInt(et[2]+et[3]) + 1;\r\n        }\r\n        let link = 'schools/'+school+'/groups/'+group;\r\n        //console.log(link)\r\n        firebase.database().ref(link).update({\r\n            temes_pass: newtemes\r\n        })\r\n    }\r\n    delTemes(e){\r\n        let et = e.target.value;\r\n        let school = et[0];\r\n        let group = et[1];\r\n        let newtemes = 0;\r\n        if(et.length === 3){\r\n            newtemes = Number.parseInt(et[2]) - 1;\r\n        }\r\n        if(et.length === 4){\r\n            newtemes = Number.parseInt(et[2]+et[3]) - 1;\r\n        }\r\n        let link = 'schools/'+school+'/groups/'+group;\r\n        //console.log(link)\r\n        firebase.database().ref(link).update({\r\n            temes_pass: newtemes\r\n        })\r\n    }\r\n    addPay(e){\r\n        //console.log(e.target.value)\r\n        let et = e.target.value;\r\n        let school = et[0];\r\n        let group = et[1];\r\n        let pupil;\r\n        if(et.length === 3){\r\n            pupil = Number.parseInt(et[2]) - 2;\r\n        }\r\n        if(et.length === 4){\r\n            pupil = Number.parseInt(et[2]+et[3]) - 2;\r\n        }\r\n        let link = 'schools/'+school+'/groups/'+group+'/pupils/'+pupil;\r\n        firebase.database().ref(link).update({\r\n            debt: this.state.debtSum\r\n        })\r\n        //console.log(school, group, pupil, 'DATA')\r\n    }\r\n    addSum(e){\r\n        this.setState({\r\n            debtSum: e.target.value\r\n        })\r\n        //console.log(this.state.debtSum)\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if(this.state.adminPassword === this.state.password){\r\n            this.setState({\r\n                passCheck: true\r\n            })\r\n        }\r\n    }\r\n    changePassword(e) {\r\n        //console.log(e.target.value)\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        let i = 1, newschool = 0, newgroup = 0;\r\n        if(!this.state.loaded && this.state.passCheck===false){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        if(this.state.loaded && this.state.passCheck===false){\r\n            return (\r\n                <Form onSubmit={this.onSubmit} className='w-50'>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Введіть пароль адміна</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.changePassword}/>\r\n                    </Form.Group>\r\n                   \r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Увійти\r\n                    </Button>\r\n                </Form>\r\n              )\r\n        }\r\n        if(this.state.loaded){\r\n            return (\r\n                <div>\r\n                    <h1 className='ff-c'>Усі школи і гупи</h1>\r\n                    <h5 className='ff-c'>\r\n                        У 3 стовпці вказані паролі(теж що і номер але якщо є два брати то до номеру дописано 1 )<br />\r\n                        Якщо з пустою коміркою натиснути 'додати' то вважається, що учень оплатив за заняття<br />\r\n                        Усе зберігається на бд у firebase тому рекомендую реред внесенням оплати раз в місяць зберігати бд у форматі json<br />\r\n                        Ця сторінка буде для відображення інфи по всіх групах(зручно викоритовувати для обдзвонів боржників... мб без кнопок тільки інфу)<br />\r\n                        Згодом зроблю сторнінку на якій вчитель зможе редагувати і бачити лише свою групу \r\n                    </h5>\r\n                    {\r\n                    this.state.schools.map(item =>(\r\n                    <div key={item.school}>\r\n                        <h1 className='blue ff-c'>{item.school}</h1>\r\n                        <div>\r\n                            {item.groups.map(item =>(\r\n                                <div key={item.name}>\r\n                                    <h3 align='left' className='gray ff-c ml-30 mt-20'>\r\n                                        <b>{item.name}</b> \t&nbsp;\t&nbsp;\r\n                                        [{item.temes_pass} - занять\r\n                                        <button value={newschool+''+newgroup+''+item.temes_pass} onClick={this.addTemes}>+</button>\r\n                                        <button value={newschool+''+ newgroup+''+item.temes_pass} onClick={this.delTemes}>-</button>\r\n                                        ] (включно з пробним)\r\n                                    </h3>\r\n                                        <ListGroup horizontal >\r\n                                            <ListGroup.Item className='width-50'><b>№</b></ListGroup.Item>\r\n                                            <ListGroup.Item className='width-250'><b>Ім'я і Прізвище</b></ListGroup.Item>\r\n                                            <ListGroup.Item className='width-250'><b>Номер телефону(пароль)</b></ListGroup.Item>\r\n                                            <ListGroup.Item className='width-150'><b>Борг</b></ListGroup.Item>\r\n                                            <ListGroup.Item className='width-250'><b>Виписати борг</b></ListGroup.Item> \r\n                                        </ListGroup>\r\n                                    {item.pupils.map(breakpoint => (\r\n                                        <ListGroup horizontal key={breakpoint.name}>\r\n                                            <ListGroup.Item className='width-50'>{i++}</ListGroup.Item>\r\n                                            <ListGroup.Item className='width-250'>{breakpoint.name}</ListGroup.Item>\r\n                                            <ListGroup.Item className='width-250'>{breakpoint.password}</ListGroup.Item>\r\n                                            <ListGroup.Item className='width-150'>\r\n                                                {(breakpoint.debt !== '') ? \r\n                                                <span className='red'><b>{breakpoint.debt}</b></span> : \r\n                                                <span className='green'><b>оплaчено</b></span>}\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item className='width-250'>\r\n                                                <input type='text' placeholder='сума боргу' className='width-100' onChange={this.addSum}/>\r\n                                                <button  value={newschool+''+ newgroup+''+i} onClick={this.addPay}>Додати</button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    ))}\r\n                                    <div style={{visibility: 'hidden'}}>{i = 1} {newgroup++}</div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div style={{visibility: 'hidden'}}>{newschool++}{newgroup = newschool - 1}</div>\r\n                    </div>\r\n                    ))\r\n                    }\r\n                    \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Admin;","import React, {Component} from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as firebase from 'firebase';\r\n\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signOut: false,\r\n            login: null,\r\n            phone: '',\r\n            password: '',\r\n            schools: [],\r\n            groups: [],\r\n            school: '',\r\n            groupSeleced: '',\r\n            schoolChuse: false\r\n        }\r\n        this.groupSelect = this.groupSelect.bind(this);\r\n        this.schoolSelect = this.schoolSelect.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onPhoneChange = this.onPhoneChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let groups;\r\n        let allSchools=[];\r\n        schoolRef.on('value', snap => {\r\n            groups = snap.val();\r\n            groups.map(item => {\r\n                allSchools.push(item.school)\r\n            })\r\n            this.setState({\r\n                schools: allSchools\r\n            })\r\n        })\r\n    }\r\n    schoolSelect(e){\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo;\r\n        let allGroups=[];\r\n        schoolRef.on('value', snap => {\r\n            dbinfo = snap.val();\r\n            dbinfo.map(item => {\r\n                if(item.school === e.target.value){\r\n                    item.groups.map(item => {\r\n                        allGroups.push(item.name)\r\n                    })\r\n                } \r\n            })\r\n        })\r\n        this.setState({\r\n            school: e.target.value,\r\n            groups: allGroups,\r\n            schoolChuse: true\r\n        })\r\n    }\r\n    groupSelect(e){\r\n        this.setState({\r\n            group: e.target.value\r\n        })\r\n    }\r\n    onPhoneChange(e) {\r\n        this.setState({\r\n            phone: e.target.value\r\n        })\r\n    }\r\n    onPasswordChange(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const rootRef = firebase.database().ref();\r\n        const schoolRef = rootRef.child('schools');\r\n        let dbinfo;\r\n        let userInfo={};\r\n        schoolRef.on('value', snap => {\r\n            dbinfo = snap.val();\r\n            dbinfo.map(item=>{\r\n                if(item.school === this.state.school){\r\n                    item.groups.map(item=>{\r\n                        if(item.name === this.state.group){\r\n                            item.pupils.map(item=>{\r\n                                if(this.state.phone === item.phone && this.state.password === item.password){\r\n                                    //console.log('loged', item);\r\n                                    userInfo.name = item.name;\r\n                                    userInfo.school = this.state.school;\r\n                                    userInfo.group = this.state.group;\r\n                                    userInfo.phone = item.phone;\r\n                                    userInfo.debt = item.debt;\r\n                                    userInfo.password = item.password;\r\n                                    //console.log(userInfo);\r\n                                    localStorage.setItem('studyLinkuser', JSON.stringify(userInfo));\r\n                                    window.location.hash = '#/home';\r\n                                    this.setState({\r\n                                        signOut: true\r\n                                    })\r\n                                    this.props.updateData(item.name)\r\n                                }else{\r\n                                    this.setState({\r\n                                        login: false\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        \r\n    }\r\n    render() {     \r\n        let faillogin, schoolChuse;\r\n        if(this.state.login === false){\r\n            faillogin = <Alert variant='danger'> Wrong phone number or passwor</Alert> \r\n            setTimeout( ()=>{\r\n                faillogin = <div></div>\r\n                this.setState({login: null})\r\n            }, 3000);\r\n        }\r\n        if(this.state.login === true){\r\n            faillogin = <div></div>\r\n        }\r\n        if(this.state.schoolChuse){\r\n            schoolChuse = <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                <Form.Label>Назва групи</Form.Label>\r\n                <Form.Control as=\"select\" onChange={this.groupSelect}>\r\n                    <option>Моя група</option>\r\n                    {   \r\n                        this.state.groups.map(item => \r\n                            <option key={item}>{item}</option>\r\n                        ) \r\n                    }\r\n                </Form.Control>\r\n            </Form.Group>\r\n        }\r\n        return ( \r\n            <div className=\"container w-50\"> \r\n            <br />\r\n                <Form onSubmit={this.onSubmit}>\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Назва закладу</Form.Label>\r\n                        <Form.Control as=\"select\" onChange={this.schoolSelect}>\r\n                                <option>Мій заклад</option>\r\n                            {\r\n                                this.state.schools.map(item => \r\n                                    <option key={item}>{item}</option>\r\n                                )\r\n                            }\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                        \r\n                    {schoolChuse}\r\n\r\n                    {faillogin}\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control \r\n                            name=\"name\" \r\n                            type=\"text\" \r\n                            placeholder=\"Enter phone\" \r\n                            onChange={this.onPhoneChange}\r\n                            value={this.state.phone} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={this.onPasswordChange}\r\n                            value={this.state.password} />\r\n                    </Form.Group>\r\n                    \r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Sign in\r\n                    </Button>\r\n                </Form>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, {Component} from \"react\";\r\nimport program from '../images/program.jpg';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Landing extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: null\r\n        }\r\n        \r\n    }\r\n    componentDidMount(){\r\n        \r\n    }\r\n    render() {\r\n        return ( \r\n           <div>\r\n               <img src={program} alt='program'/>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport '../componentsStyle/LoaderStyle.css';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nclass Temes extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loaded: false,\r\n            temes: null,\r\n            username: null,\r\n            temesOpen: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const rootRef = firebase.database().ref();\r\n        const temesRef = rootRef.child('temes');\r\n        const schoolRef = rootRef.child('schools');\r\n        let user = JSON.parse(localStorage.getItem('studyLinkuser'));\r\n        //console.log(user)\r\n        let dbinfo, dbinfoSchools, temes_pass;\r\n        \r\n        schoolRef.on('value', snap =>{\r\n            dbinfoSchools = snap.val();\r\n            dbinfoSchools.map(item=>{\r\n                if(item.school === user.school){\r\n                    item.groups.map(item=>{\r\n                        if(item.name === user.group){\r\n                            temes_pass = item.temes_pass\r\n                            this.setState({\r\n                                temesOpen: item.temes_pass\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        temesRef.on('value', snap =>{\r\n            dbinfo = snap.val();\r\n            if(!this.state.loaded){\r\n                while(dbinfo.length > temes_pass){\r\n                    dbinfo.pop();\r\n                    //console.log(dbinfo, temes_pass)\r\n                }\r\n                this.setState({\r\n                    temes: dbinfo\r\n                })\r\n            }\r\n            this.setState({\r\n                username: user.name,\r\n                loaded: true\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <h1>Теми відкриті для {this.state.username}</h1>\r\n                    <Accordion defaultActiveKey=\"0\" align='left'>\r\n                    {\r\n                        this.state.temes.map(item=>(\r\n                            <Card key={item.tema}>\r\n                                <Accordion.Toggle as={Card.Header} eventKey={item.tema}>\r\n                                    {item.tema}\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey={item.tema}>\r\n                                <Card.Body>\r\n                                    {(item.task[0] !== \"\") ? <div>\r\n                                        <h5 align=\"left\">Завдання</h5>\r\n                                        <ol>\r\n                                        {item.task.map(item =>(\r\n                                            <li align='left' key={item}><a href={'https://kosaniakmarianone.github.io/' + item} target='blank'>Завдання</a></li>\r\n                                        ))}\r\n                                        </ol></div>: ''\r\n                                    }\r\n                                    {(item.materials !== \"\") ? <h5 align='left'><a href={item.materials} target='blank'>Матеріали</a></h5> : ''}\r\n                                    {(item.video !== \"\") ? <h5 align='left'><a href={item.video} target='blank'>Відео</a></h5> : ''}\r\n                                    {(item.video === \"\" && item.materials === \"\" && item.task[0] === \"\") ? 'Тема не відкрита, або розглядається лише на занятті': ''}\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        ))\r\n                    }\r\n                     </Accordion>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Temes;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport pay from '../images/pay.jpg';\r\n\r\n\r\nclass HowToPay extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loged: false\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            loaded: true\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        if(!this.state.loaded){\r\n            return <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        }\r\n        else{\r\n        return (\r\n            <div>\r\n                <h2>Для власників карти приватбанку є зручний спосіб оплати.</h2>\r\n                <img src={pay} alt='how to pay'/>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n}\r\nexport default HowToPay;","import React, {Component} from 'react';\nimport { HashRouter, Route} from \"react-router-dom\";\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Admin from './components/Admin';\nimport SignIn from './components/SignIn';\nimport Landing from './components/Landing';\nimport Temes from './components/Temes';\nimport HowToPay from './components/HowToPay';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: this.props.username,\n            loged: false\n        }\n        this.updateData = this.updateData.bind(this)\n        this.updateLoged = this.updateLoged.bind(this)\n\n    }\n    componentDidMount(){\n        if(this.props.username !== null){\n        this.setState({ \n            loged: true,\n            username: this.props.username,\n            userschool: this.props.userschool,\n            usergroup: this.props.usergroup,\n         })\n        }\n    }\n    updateData = (value) => {\n        this.setState({ username: value, loged: true});\n    }\n    updateLoged = (value) => {\n        this.setState({ loged: value});\n    }\n    render() {\n        return (\n            <HashRouter basename='/'>\n              <div className=\"App\" align='center'>\n                  <Route path='/'  render={() => (<Header  username={this.state.username} loged={this.state.loged} updateLoged={this.updateLoged}/>)}/>\n\n                  <Route exact path='/' component={Landing}/>\n\n                  <Route exact path='/landing' component={Landing}/>\n\n                  <Route exact path='/home' component={Home}/>\n\n                  <Route exact path='/temes' component={Temes}/>\n\n                  <Route exact path='/howtopay' component={HowToPay}/>\n\n                  <Route exact path='/admin' component={Admin}/>\n\n                  <Route path='/SignIn' render={() => (<SignIn updateData={this.updateData}/>)}/>\n              </div>\n          </HashRouter>\n        );\n    }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDHAQfudekbBrh4WeEyhi9XZ4tPyuU-nHQ\",\n    authDomain: \"studylink-62a6b.firebaseapp.com\",\n    databaseURL: \"https://studylink-62a6b.firebaseio.com\",\n    projectId: \"studylink-62a6b\",\n    storageBucket: \"studylink-62a6b.appspot.com\",\n    messagingSenderId: \"710063505158\",\n    appId: \"1:710063505158:web:4573c8d89733fc2025e887\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  let user;\n  if(localStorage.getItem('studyLinkuser') !== null){\n    user = JSON.parse(localStorage.getItem('studyLinkuser'));\n  }\n  if(localStorage.getItem('studyLinkuser') == null){\n    user = {\n      name: null,\n      school: null,\n      group: null,\n      phone: null,\n      debt: null\n  }\n}\nReactDOM.render(<App \n  username={user.name}\n  userschool={user.school} \n  usergroup={user.group} \n  userphone={user.phone} \n  userdebt={user.debt}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}